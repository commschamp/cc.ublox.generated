// Generated by commsdsl2comms v7.0.0

/// @file
/// @brief Contains definition of protocol default options.

#pragma once

#include "comms/options.h"

namespace cc_ublox
{

namespace options
{

/// @brief Empty class to serve as the base for options.
struct EmptyOptions {};

/// @brief Default (empty) options of the protocol.
template <typename TBase = EmptyOptions>
struct DefaultOptionsT : public TBase
{
    /// @brief Extra options for fields.
    struct field
    {
        /// @brief Extra options for @ref
        ///     cc_ublox::field::CfgValData8 field.
        using CfgValData8 = comms::option::app::EmptyOption;

        struct CfgValPairMembers
        {
            struct UsbVendorStr0Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbVendorStr0Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbVendorStr0Members

            struct UsbVendorStr1Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbVendorStr1Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbVendorStr1Members

            struct UsbVendorStr2Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbVendorStr2Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbVendorStr2Members

            struct UsbVendorStr3Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbVendorStr3Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbVendorStr3Members

            struct UsbProductStr0Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbProductStr0Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbProductStr0Members

            struct UsbProductStr1Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbProductStr1Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbProductStr1Members

            struct UsbProductStr2Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbProductStr2Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbProductStr2Members

            struct UsbProductStr3Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbProductStr3Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbProductStr3Members

            struct UsbSerialNoStr0Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbSerialNoStr0Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbSerialNoStr0Members

            struct UsbSerialNoStr1Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbSerialNoStr1Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbSerialNoStr1Members

            struct UsbSerialNoStr2Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbSerialNoStr2Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbSerialNoStr2Members

            struct UsbSerialNoStr3Members
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::field::CfgValPairMembers::UsbSerialNoStr3Members::Val
                ///     field.
                using Val = comms::option::app::EmptyOption;
            }; // struct UsbSerialNoStr3Members
        }; // struct CfgValPairMembers
    }; // struct field

    /// @brief Extra options for messages.
    struct message
    {
        /// @brief Extra options for @ref
        ///     cc_ublox::message::AckAck message.
        using AckAck = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AckNak message.
        using AckNak = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlm message.
        struct AidAlmFields
        {
            struct DwrdMembers
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::message::AidAlmFields::DwrdMembers::List
                ///     field.
                using List = comms::option::app::EmptyOption;
            }; // struct DwrdMembers
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAlm message.
        using AidAlm = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAlmPoll message.
        using AidAlmPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAlmPollSv message.
        using AidAlmPollSv = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAlp message.
        using AidAlp = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlpData message.
        struct AidAlpDataFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAlpDataFields::AlpData
            ///     field.
            using AlpData = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAlpData message.
        using AidAlpData = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlpsrv message.
        struct AidAlpsrvFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAlpsrvFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlpsrvToServer message.
        struct AidAlpsrvToServerFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAlpsrvToServerFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAlpsrvToServer
        ///     message.
        using AidAlpsrvToServer = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAop message.
        struct AidAopFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAopFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;

            struct OptionalsMembers
            {
                struct OptionalsWrapMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional0
                    ///     field.
                    using Optional0 = comms::option::app::EmptyOption;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional1
                    ///     field.
                    using Optional1 = comms::option::app::EmptyOption;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional2
                    ///     field.
                    using Optional2 = comms::option::app::EmptyOption;
                }; // struct OptionalsWrapMembers
            }; // struct OptionalsMembers
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAopPoll message.
        using AidAopPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidAopPollSv message.
        using AidAopPollSv = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAopU8 message.
        struct AidAopU8Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAopU8Fields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidData message.
        using AidData = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidEph message.
        struct AidEphFields
        {
            struct SfdMembers
            {
                struct ListsMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidEphFields::SfdMembers::ListsMembers::Sf1d
                    ///     field.
                    using Sf1d = comms::option::app::EmptyOption;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidEphFields::SfdMembers::ListsMembers::Sf2d
                    ///     field.
                    using Sf2d = comms::option::app::EmptyOption;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidEphFields::SfdMembers::ListsMembers::Sf3d
                    ///     field.
                    using Sf3d = comms::option::app::EmptyOption;
                }; // struct ListsMembers
            }; // struct SfdMembers
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidEph message.
        using AidEph = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidEphPoll message.
        using AidEphPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidEphPollSv message.
        using AidEphPollSv = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidHuiPoll message.
        using AidHuiPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidIniPoll message.
        using AidIniPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::AidReq message.
        using AidReq = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgAntPoll message.
        using CfgAntPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgCfg message.
        using CfgCfg = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgDat message.
        struct CfgDatFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgDatFields::DatumName
            ///     field.
            using DatumName = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgDat message.
        using CfgDat = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgDatPoll message.
        using CfgDatPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgDatStandard
        ///     message.
        using CfgDatStandard = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgDatUser message.
        using CfgDatUser = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgDgnssPoll message.
        using CfgDgnssPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgDosc message.
        struct CfgDoscFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgDoscFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgDoscPoll message.
        using CfgDoscPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgEkfPoll message.
        using CfgEkfPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgEsrc message.
        struct CfgEsrcFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgEsrcFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgEsrcPoll message.
        using CfgEsrcPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgFixseed message.
        struct CfgFixseedFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgFixseedFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgFixseed message.
        using CfgFixseed = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgFxnPoll message.
        using CfgFxnPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgGeofence message.
        struct CfgGeofenceFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgGeofenceFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgGeofencePoll
        ///     message.
        using CfgGeofencePoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgGnss message.
        struct CfgGnssFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgGnssFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgGnssPoll message.
        using CfgGnssPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgHnrPoll message.
        using CfgHnrPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgInf message.
        struct CfgInfFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgInfFields::InfMsgMask
            ///     field.
            using InfMsgMask = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgInfPoll message.
        using CfgInfPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgItfmPoll message.
        using CfgItfmPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgLogfilterPoll
        ///     message.
        using CfgLogfilterPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgMsg message.
        struct CfgMsgFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgMsgFields::Rates
            ///     field.
            using Rates = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgMsgPoll message.
        using CfgMsgPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgNav5Poll message.
        using CfgNav5Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgNavx5Poll message.
        using CfgNavx5Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgNmeaPoll message.
        using CfgNmeaPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgNmeaV1 message.
        struct CfgNmeaV1Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgNmeaV1Fields::BdsTalkerId
            ///     field.
            using BdsTalkerId = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgNvs message.
        using CfgNvs = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgOdoPoll message.
        using CfgOdoPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgPm2 message.
        struct CfgPm2Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgPm2Fields::Reserved3
            ///     field.
            using Reserved3 = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgPm2Poll message.
        using CfgPm2Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgPm2V2 message.
        struct CfgPm2V2Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgPm2V2Fields::Reserved3
            ///     field.
            using Reserved3 = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgPmPoll message.
        using CfgPmPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgPmsPoll message.
        using CfgPmsPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgPrtPoll message.
        using CfgPrtPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgPrtPortPoll
        ///     message.
        using CfgPrtPortPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgPwr message.
        using CfgPwr = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgRatePoll message.
        using CfgRatePoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgRinv message.
        struct CfgRinvFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgRinvFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgRinvPoll message.
        using CfgRinvPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgRst message.
        using CfgRst = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgRxmPoll message.
        using CfgRxmPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgSbasPoll message.
        using CfgSbasPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgSmgrPoll message.
        using CfgSmgrPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgTmode2Poll
        ///     message.
        using CfgTmode2Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgTmode3Poll
        ///     message.
        using CfgTmode3Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgTmodePoll message.
        using CfgTmodePoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgTp5Poll message.
        using CfgTp5Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgTp5PollSelect
        ///     message.
        using CfgTp5PollSelect = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgTpPoll message.
        using CfgTpPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgTxslot message.
        struct CfgTxslotFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgTxslotFields::End
            ///     field.
            using End = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgTxslot message.
        using CfgTxslot = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgUsb message.
        struct CfgUsbFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgUsbFields::VendorString
            ///     field.
            using VendorString = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgUsbFields::ProductString
            ///     field.
            using ProductString = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgUsbFields::SerialNumber
            ///     field.
            using SerialNumber = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgUsbPoll message.
        using CfgUsbPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValdel message.
        struct CfgValdelFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValdelFields::Keys
            ///     field.
            using Keys = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgValdel message.
        using CfgValdel = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValget message.
        struct CfgValgetFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValgetFields::Cfgdata
            ///     field.
            using Cfgdata = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgValget message.
        using CfgValget = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValgetPoll message.
        struct CfgValgetPollFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValgetPollFields::Keys
            ///     field.
            using Keys = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgValgetPoll
        ///     message.
        using CfgValgetPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValset message.
        struct CfgValsetFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValsetFields::Cfgdata
            ///     field.
            using Cfgdata = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::CfgValset message.
        using CfgValset = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::EsfIns message.
        using EsfIns = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::EsfInsPoll message.
        using EsfInsPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::EsfMeas message.
        struct EsfMeasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::EsfMeasFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::EsfMeasPoll message.
        using EsfMeasPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::EsfRaw message.
        struct EsfRawFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::EsfRawFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::EsfRaw message.
        using EsfRaw = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::EsfStatus message.
        struct EsfStatusFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::EsfStatusFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::EsfStatus message.
        using EsfStatus = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::EsfStatusPoll
        ///     message.
        using EsfStatusPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::HnrPvt message.
        using HnrPvt = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::HnrPvtPoll message.
        using HnrPvtPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfDebug message.
        struct InfDebugFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfDebugFields::Str
            ///     field.
            using Str = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::InfDebug message.
        using InfDebug = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfError message.
        struct InfErrorFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfErrorFields::Str
            ///     field.
            using Str = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::InfError message.
        using InfError = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfNotice message.
        struct InfNoticeFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfNoticeFields::Str
            ///     field.
            using Str = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::InfNotice message.
        using InfNotice = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfTest message.
        struct InfTestFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfTestFields::Str
            ///     field.
            using Str = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::InfTest message.
        using InfTest = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfWarning message.
        struct InfWarningFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfWarningFields::Str
            ///     field.
            using Str = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::InfWarning message.
        using InfWarning = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogBatch message.
        using LogBatch = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogCreate message.
        using LogCreate = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogErase message.
        using LogErase = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogFindtime message.
        using LogFindtime = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogFindtimeResp
        ///     message.
        using LogFindtimeResp = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogInfo message.
        using LogInfo = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogInfoPoll message.
        using LogInfoPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogRetrieve message.
        using LogRetrieve = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogRetrievebatch
        ///     message.
        using LogRetrievebatch = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogRetrievepos
        ///     message.
        using LogRetrievepos = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::LogRetrieveposextra message.
        struct LogRetrieveposextraFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::LogRetrieveposextraFields::Reserved3
            ///     field.
            using Reserved3 = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogRetrieveposextra
        ///     message.
        using LogRetrieveposextra = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::LogRetrievestring message.
        struct LogRetrievestringFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::LogRetrievestringFields::Bytes
            ///     field.
            using Bytes = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogRetrievestring
        ///     message.
        using LogRetrievestring = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::LogString message.
        struct LogStringFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::LogStringFields::Bytes
            ///     field.
            using Bytes = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::LogString message.
        using LogString = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaAck message.
        struct MgaAckFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaAckFields::MsgPayloadStart
            ///     field.
            using MsgPayloadStart = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaAck message.
        using MgaAck = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaAno message.
        struct MgaAnoFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaAnoFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaAno message.
        using MgaAno = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaBdsAlm message.
        using MgaBdsAlm = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaBdsEph message.
        using MgaBdsEph = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaBdsHealth message.
        struct MgaBdsHealthFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaBdsHealthFields::HealthCode
            ///     field.
            using HealthCode = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaBdsHealth message.
        using MgaBdsHealth = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaBdsIono message.
        using MgaBdsIono = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaBdsUtc message.
        using MgaBdsUtc = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaDbd message.
        struct MgaDbdFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaDbdFields::Reserved1
            ///     field.
            using Reserved1 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaDbdFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaDbdPoll message.
        using MgaDbdPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaFlashAck message.
        using MgaFlashAck = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaFlashEph message.
        struct MgaFlashEphFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaFlashEphFields::Data
            ///     field.
            using Data = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaFlashEph message.
        using MgaFlashEph = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaFlashStop message.
        using MgaFlashStop = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGalAlm message.
        using MgaGalAlm = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGalEph message.
        using MgaGalEph = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGalTimeoffset
        ///     message.
        using MgaGalTimeoffset = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGalUtc message.
        using MgaGalUtc = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGloAlm message.
        using MgaGloAlm = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGloEph message.
        using MgaGloEph = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGloTimeoffset
        ///     message.
        using MgaGloTimeoffset = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGpsAlm message.
        using MgaGpsAlm = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGpsEph message.
        using MgaGpsEph = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaGpsHealth message.
        struct MgaGpsHealthFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaGpsHealthFields::HealthCode
            ///     field.
            using HealthCode = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGpsHealth message.
        using MgaGpsHealth = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGpsIono message.
        using MgaGpsIono = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaGpsUtc message.
        using MgaGpsUtc = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaIniClkd message.
        using MgaIniClkd = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaIniEop message.
        struct MgaIniEopFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaIniEopFields::Reserved2
            ///     field.
            using Reserved2 = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaIniEop message.
        using MgaIniEop = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaIniFreq message.
        using MgaIniFreq = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaIniPosLlh message.
        using MgaIniPosLlh = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaIniPosXyz message.
        using MgaIniPosXyz = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaIniTimeGnss
        ///     message.
        using MgaIniTimeGnss = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaIniTimeUtc
        ///     message.
        using MgaIniTimeUtc = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaQzssAlm message.
        using MgaQzssAlm = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaQzssEph message.
        using MgaQzssEph = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaQzssHealth message.
        struct MgaQzssHealthFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaQzssHealthFields::HealthCode
            ///     field.
            using HealthCode = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MgaQzssHealth
        ///     message.
        using MgaQzssHealth = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonComms message.
        struct MonCommsFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonCommsFields::ProtIds
            ///     field.
            using ProtIds = comms::option::app::EmptyOption;

            struct ListMembers
            {
                struct ElementMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::MonCommsFields::ListMembers::ElementMembers::Msgs
                    ///     field.
                    using Msgs = comms::option::app::EmptyOption;
                }; // struct ElementMembers
            }; // struct ListMembers

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonCommsFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonComms message.
        using MonComms = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonCommsPoll message.
        using MonCommsPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonGnss message.
        using MonGnss = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonGnssPoll message.
        using MonGnssPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonHw message.
        struct MonHwFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHwFields::VP
            ///     field.
            using VP = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonHw message.
        using MonHw = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonHw2 message.
        using MonHw2 = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonHw2Poll message.
        using MonHw2Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonHw3 message.
        struct MonHw3Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHw3Fields::HwVersion
            ///     field.
            using HwVersion = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHw3Fields::Reserved0
            ///     field.
            using Reserved0 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHw3Fields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonHw3 message.
        using MonHw3 = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonHw3Poll message.
        using MonHw3Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonHwPoll message.
        using MonHwPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonIo message.
        struct MonIoFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonIoFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonIo message.
        using MonIo = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonIoPoll message.
        using MonIoPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonMsgpp message.
        struct MonMsgppFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg1
            ///     field.
            using Msg1 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg2
            ///     field.
            using Msg2 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg3
            ///     field.
            using Msg3 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg4
            ///     field.
            using Msg4 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg5
            ///     field.
            using Msg5 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg6
            ///     field.
            using Msg6 = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Skipped
            ///     field.
            using Skipped = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonMsgpp message.
        using MonMsgpp = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonMsgppPoll message.
        using MonMsgppPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonPatch message.
        struct MonPatchFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonPatchFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonPatch message.
        using MonPatch = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonPatchPoll message.
        using MonPatchPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonRf message.
        struct MonRfFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRfFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonRf message.
        using MonRf = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonRfPoll message.
        using MonRfPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonRxbuf message.
        struct MonRxbufFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRxbufFields::Pending
            ///     field.
            using Pending = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRxbufFields::Usage
            ///     field.
            using Usage = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRxbufFields::PeakUsage
            ///     field.
            using PeakUsage = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonRxbuf message.
        using MonRxbuf = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonRxbufPoll message.
        using MonRxbufPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonRxr message.
        using MonRxr = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonSmgr message.
        using MonSmgr = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonSmgrPoll message.
        using MonSmgrPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonSpan message.
        struct MonSpanFields
        {
            struct ListMembers
            {
                struct ElementMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::MonSpanFields::ListMembers::ElementMembers::Spectrum
                    ///     field.
                    using Spectrum = comms::option::app::EmptyOption;
                }; // struct ElementMembers
            }; // struct ListMembers

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonSpanFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonSpan message.
        using MonSpan = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonSpanPoll message.
        using MonSpanPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonTxbuf message.
        struct MonTxbufFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonTxbufFields::Pending
            ///     field.
            using Pending = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonTxbufFields::Usage
            ///     field.
            using Usage = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonTxbufFields::PeakUsage
            ///     field.
            using PeakUsage = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonTxbuf message.
        using MonTxbuf = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonTxbufPoll message.
        using MonTxbufPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonVer message.
        struct MonVerFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonVerFields::SwVersion
            ///     field.
            using SwVersion = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonVerFields::HwVersion
            ///     field.
            using HwVersion = comms::option::app::EmptyOption;

            struct ListMembers
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::message::MonVerFields::ListMembers::Extension
                ///     field.
                using Extension = comms::option::app::EmptyOption;
            }; // struct ListMembers

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonVerFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonVer message.
        using MonVer = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::MonVerPoll message.
        using MonVerPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavAopstatus message.
        using NavAopstatus = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavAopstatusPoll
        ///     message.
        using NavAopstatusPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavAopstatusUblox8
        ///     message.
        using NavAopstatusUblox8 = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavAttPoll message.
        using NavAttPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavClock message.
        using NavClock = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavClockPoll message.
        using NavClockPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavDgps message.
        struct NavDgpsFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavDgpsFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavDgps message.
        using NavDgps = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavDgpsPoll message.
        using NavDgpsPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavDop message.
        using NavDop = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavDopPoll message.
        using NavDopPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavEoe message.
        using NavEoe = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavGeofence message.
        struct NavGeofenceFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavGeofenceFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavGeofence message.
        using NavGeofence = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavGeofencePoll
        ///     message.
        using NavGeofencePoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavHpposecef message.
        using NavHpposecef = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavHpposecefPoll
        ///     message.
        using NavHpposecefPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavHpposllh message.
        using NavHpposllh = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavHpposllhPoll
        ///     message.
        using NavHpposllhPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavOdo message.
        using NavOdo = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavOdoPoll message.
        using NavOdoPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavOrb message.
        struct NavOrbFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavOrbFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavOrb message.
        using NavOrb = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavOrbPoll message.
        using NavOrbPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavPosecef message.
        using NavPosecef = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavPosecefPoll
        ///     message.
        using NavPosecefPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavPosllh message.
        using NavPosllh = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavPosllhPoll
        ///     message.
        using NavPosllhPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavPvt message.
        using NavPvt = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavPvtPoll message.
        using NavPvtPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavPvt_u8 message.
        using NavPvt_u8 = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavRelposned message.
        using NavRelposned = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavRelposnedPoll
        ///     message.
        using NavRelposnedPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavRelposned_v1
        ///     message.
        using NavRelposned_v1 = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavResetodo message.
        using NavResetodo = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSat message.
        struct NavSatFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSatFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSat message.
        using NavSat = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSatPoll message.
        using NavSatPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSbas message.
        struct NavSbasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSbasFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSbas message.
        using NavSbas = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSbasPoll message.
        using NavSbasPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSig message.
        struct NavSigFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSigFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSig message.
        using NavSig = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSigPoll message.
        using NavSigPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSlas message.
        struct NavSlasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSlasFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSlas message.
        using NavSlas = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSlasPoll message.
        using NavSlasPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSol message.
        using NavSol = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSolPoll message.
        using NavSolPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavStatus message.
        using NavStatus = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavStatusPoll
        ///     message.
        using NavStatusPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSvin message.
        using NavSvin = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSvinPoll message.
        using NavSvinPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSvinfo message.
        struct NavSvinfoFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSvinfoFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSvinfo message.
        using NavSvinfo = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavSvinfoPoll
        ///     message.
        using NavSvinfoPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimebds message.
        using NavTimebds = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimebdsPoll
        ///     message.
        using NavTimebdsPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimegal message.
        using NavTimegal = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimegalPoll
        ///     message.
        using NavTimegalPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimeglo message.
        using NavTimeglo = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimegloPoll
        ///     message.
        using NavTimegloPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimegps message.
        using NavTimegps = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimegpsPoll
        ///     message.
        using NavTimegpsPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimels message.
        using NavTimels = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimelsPoll
        ///     message.
        using NavTimelsPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimeutc message.
        using NavTimeutc = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavTimeutcPoll
        ///     message.
        using NavTimeutcPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavVelecef message.
        using NavVelecef = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavVelecefPoll
        ///     message.
        using NavVelecefPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavVelned message.
        using NavVelned = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::NavVelnedPoll
        ///     message.
        using NavVelnedPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmAlm message.
        struct RxmAlmFields
        {
            struct DwrdMembers
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::message::RxmAlmFields::DwrdMembers::List
                ///     field.
                using List = comms::option::app::EmptyOption;
            }; // struct DwrdMembers
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmAlm message.
        using RxmAlm = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmAlmPoll message.
        using RxmAlmPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmAlmPollSv message.
        using RxmAlmPollSv = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmEph message.
        struct RxmEphFields
        {
            struct SfdMembers
            {
                struct ListsMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::RxmEphFields::SfdMembers::ListsMembers::Sf1d
                    ///     field.
                    using Sf1d = comms::option::app::EmptyOption;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::RxmEphFields::SfdMembers::ListsMembers::Sf2d
                    ///     field.
                    using Sf2d = comms::option::app::EmptyOption;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::RxmEphFields::SfdMembers::ListsMembers::Sf3d
                    ///     field.
                    using Sf3d = comms::option::app::EmptyOption;
                }; // struct ListsMembers
            }; // struct SfdMembers
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmEph message.
        using RxmEph = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmEphPoll message.
        using RxmEphPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmEphPollSv message.
        using RxmEphPollSv = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmImes message.
        struct RxmImesFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmImesFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmImes message.
        using RxmImes = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmImesPoll message.
        using RxmImesPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmMeasx message.
        struct RxmMeasxFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmMeasxFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmMeasx message.
        using RxmMeasx = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmMeasxPoll message.
        using RxmMeasxPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmPmreq message.
        using RxmPmreq = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmPmreqV0 message.
        using RxmPmreqV0 = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRaw message.
        struct RxmRawFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRawFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmRaw message.
        using RxmRaw = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmRawPoll message.
        using RxmRawPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRawx message.
        struct RxmRawxFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRawxFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmRawx message.
        using RxmRawx = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmRawxPoll message.
        using RxmRawxPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRlmLong message.
        struct RxmRlmLongFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmLongFields::Beacon
            ///     field.
            using Beacon = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmLongFields::Params
            ///     field.
            using Params = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmRlmLong message.
        using RxmRlmLong = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRlmShort message.
        struct RxmRlmShortFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmShortFields::Beacon
            ///     field.
            using Beacon = comms::option::app::EmptyOption;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmShortFields::Params
            ///     field.
            using Params = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmRlmShort message.
        using RxmRlmShort = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmRtcm message.
        using RxmRtcm = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmSfrb message.
        struct RxmSfrbFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmSfrbFields::Dwrd
            ///     field.
            using Dwrd = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmSfrb message.
        using RxmSfrb = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmSfrbx message.
        struct RxmSfrbxFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmSfrbxFields::Dwrd
            ///     field.
            using Dwrd = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmSfrbx message.
        using RxmSfrbx = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmSvsi message.
        struct RxmSvsiFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmSvsiFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmSvsi message.
        using RxmSvsi = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::RxmSvsiPoll message.
        using RxmSvsiPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::SecSign message.
        struct SecSignFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::SecSignFields::Hash
            ///     field.
            using Hash = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::SecSign message.
        using SecSign = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::SecUniqid message.
        struct SecUniqidFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::SecUniqidFields::UniqueId
            ///     field.
            using UniqueId = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::SecUniqid message.
        using SecUniqid = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::SecUniqidPoll
        ///     message.
        using SecUniqidPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimDosc message.
        using TimDosc = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimFchg message.
        using TimFchg = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimFchgPoll message.
        using TimFchgPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::TimSmeas message.
        struct TimSmeasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::TimSmeasFields::List
            ///     field.
            using List = comms::option::app::EmptyOption;
        };

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimSvin message.
        using TimSvin = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimSvinPoll message.
        using TimSvinPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimTm2 message.
        using TimTm2 = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimTm2Poll message.
        using TimTm2Poll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimTos message.
        using TimTos = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimTp message.
        using TimTp = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimTpPoll message.
        using TimTpPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimVcocal message.
        using TimVcocal = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimVcocalExt message.
        using TimVcocalExt = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimVcocalPoll
        ///     message.
        using TimVcocalPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimVcocalStop
        ///     message.
        using TimVcocalStop = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimVrfy message.
        using TimVrfy = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::TimVrfyPoll message.
        using TimVrfyPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::UpdSosAck message.
        using UpdSosAck = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::UpdSosClear message.
        using UpdSosClear = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::UpdSosCreate message.
        using UpdSosCreate = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::UpdSosPoll message.
        using UpdSosPoll = comms::option::app::EmptyOption;

        /// @brief Extra options for @ref
        ///     cc_ublox::message::UpdSosRestored
        ///     message.
        using UpdSosRestored = comms::option::app::EmptyOption;
    }; // struct message

    /// @brief Extra options for frames.
    struct frame
    {
        /// @brief Extra options for layers of
        ///     @ref cc_ublox::frame::UbloxFrame frame.
        struct UbloxFrameLayers
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::frame::UbloxFrameLayers::PayloadMembers::Field field.
            struct PayloadMembers
            {
                using Field = comms::option::app::EmptyOption;
            }; // struct PayloadMembers

            /// @brief Extra options for @ref
            ///     cc_ublox::frame::UbloxFrameLayers::Id
            ///     layer.
            using Id = comms::option::app::EmptyOption;
        }; // struct UbloxFrameLayers
    }; // struct frame
};

/// @brief Default (empty) options of the protocol.
using DefaultOptions = DefaultOptionsT<>;

} // namespace options

} // namespace cc_ublox
