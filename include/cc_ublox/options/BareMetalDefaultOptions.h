// Generated by commsdsl2comms v5.1.2

/// @file
/// @brief Contains definition of protocol bare metal default options.

#pragma once

#include "cc_ublox/options/DefaultOptions.h"

#ifndef DEFAULT_SEQ_FIXED_STORAGE_SIZE
/// @brief Define default fixed size for various sequence fields
/// @details May be defined during compile time to change the default value.
#define DEFAULT_SEQ_FIXED_STORAGE_SIZE 32
#endif

namespace cc_ublox
{

namespace options
{

/// @brief Default bare metal options of the protocol.
template <typename TBase = cc_ublox::options::DefaultOptions>
struct BareMetalDefaultOptionsT : public TBase
{
    /// @brief Extra options for fields.
    struct field : public TBase::field
    {
        /// @brief Extra options for @ref
        ///     cc_ublox::field::CfgValData8 field.
        using CfgValData8 =
            std::tuple<
                comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                typename TBase::field::CfgValData8
            >;
    }; // struct field

    /// @brief Extra options for messages.
    struct message : public TBase::message
    {
        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlm message.
        struct AidAlmFields : public TBase::message::AidAlmFields
        {
            struct DwrdMembers : public TBase::message::AidAlmFields::DwrdMembers
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::message::AidAlmFields::DwrdMembers::List
                ///     field.
                using List =
                    std::tuple<
                        comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                        typename TBase::message::AidAlmFields::DwrdMembers::List
                    >;
            }; // struct DwrdMembers
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlpData message.
        struct AidAlpDataFields : public TBase::message::AidAlpDataFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAlpDataFields::AlpData
            ///     field.
            using AlpData =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::AidAlpDataFields::AlpData
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlpsrv message.
        struct AidAlpsrvFields : public TBase::message::AidAlpsrvFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAlpsrvFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::AidAlpsrvFields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAlpsrvToServer message.
        struct AidAlpsrvToServerFields : public TBase::message::AidAlpsrvToServerFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAlpsrvToServerFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::AidAlpsrvToServerFields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAop message.
        struct AidAopFields : public TBase::message::AidAopFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAopFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::AidAopFields::Data
                >;

            struct OptionalsMembers : public TBase::message::AidAopFields::OptionalsMembers
            {
                struct OptionalsWrapMembers : public TBase::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional0
                    ///     field.
                    using Optional0 =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional0
                        >;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional1
                    ///     field.
                    using Optional1 =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional1
                        >;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional2
                    ///     field.
                    using Optional2 =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::AidAopFields::OptionalsMembers::OptionalsWrapMembers::Optional2
                        >;
                }; // struct OptionalsWrapMembers
            }; // struct OptionalsMembers
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidAopU8 message.
        struct AidAopU8Fields : public TBase::message::AidAopU8Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::AidAopU8Fields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::AidAopU8Fields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::AidEph message.
        struct AidEphFields : public TBase::message::AidEphFields
        {
            struct SfdMembers : public TBase::message::AidEphFields::SfdMembers
            {
                struct ListsMembers : public TBase::message::AidEphFields::SfdMembers::ListsMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidEphFields::SfdMembers::ListsMembers::Sf1d
                    ///     field.
                    using Sf1d =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::AidEphFields::SfdMembers::ListsMembers::Sf1d
                        >;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidEphFields::SfdMembers::ListsMembers::Sf2d
                    ///     field.
                    using Sf2d =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::AidEphFields::SfdMembers::ListsMembers::Sf2d
                        >;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::AidEphFields::SfdMembers::ListsMembers::Sf3d
                    ///     field.
                    using Sf3d =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::AidEphFields::SfdMembers::ListsMembers::Sf3d
                        >;
                }; // struct ListsMembers
            }; // struct SfdMembers
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgDat message.
        struct CfgDatFields : public TBase::message::CfgDatFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgDatFields::DatumName
            ///     field.
            using DatumName =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgDatFields::DatumName
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgDosc message.
        struct CfgDoscFields : public TBase::message::CfgDoscFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgDoscFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgDoscFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgEsrc message.
        struct CfgEsrcFields : public TBase::message::CfgEsrcFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgEsrcFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgEsrcFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgFixseed message.
        struct CfgFixseedFields : public TBase::message::CfgFixseedFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgFixseedFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgFixseedFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgGeofence message.
        struct CfgGeofenceFields : public TBase::message::CfgGeofenceFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgGeofenceFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgGeofenceFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgGnss message.
        struct CfgGnssFields : public TBase::message::CfgGnssFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgGnssFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgGnssFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgInf message.
        struct CfgInfFields : public TBase::message::CfgInfFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgInfFields::InfMsgMask
            ///     field.
            using InfMsgMask =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgInfFields::InfMsgMask
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgMsg message.
        struct CfgMsgFields : public TBase::message::CfgMsgFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgMsgFields::Rates
            ///     field.
            using Rates =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgMsgFields::Rates
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgNmeaV1 message.
        struct CfgNmeaV1Fields : public TBase::message::CfgNmeaV1Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgNmeaV1Fields::BdsTalkerId
            ///     field.
            using BdsTalkerId =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgNmeaV1Fields::BdsTalkerId
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgPm2 message.
        struct CfgPm2Fields : public TBase::message::CfgPm2Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgPm2Fields::Reserved3
            ///     field.
            using Reserved3 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgPm2Fields::Reserved3
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgPm2V2 message.
        struct CfgPm2V2Fields : public TBase::message::CfgPm2V2Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgPm2V2Fields::Reserved3
            ///     field.
            using Reserved3 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgPm2V2Fields::Reserved3
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgRinv message.
        struct CfgRinvFields : public TBase::message::CfgRinvFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgRinvFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgRinvFields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgTxslot message.
        struct CfgTxslotFields : public TBase::message::CfgTxslotFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgTxslotFields::End
            ///     field.
            using End =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgTxslotFields::End
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgUsb message.
        struct CfgUsbFields : public TBase::message::CfgUsbFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgUsbFields::VendorString
            ///     field.
            using VendorString =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgUsbFields::VendorString
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgUsbFields::ProductString
            ///     field.
            using ProductString =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgUsbFields::ProductString
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgUsbFields::SerialNumber
            ///     field.
            using SerialNumber =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::CfgUsbFields::SerialNumber
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValdel message.
        struct CfgValdelFields : public TBase::message::CfgValdelFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValdelFields::Keys
            ///     field.
            using Keys =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgValdelFields::Keys
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValget message.
        struct CfgValgetFields : public TBase::message::CfgValgetFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValgetFields::Cfgdata
            ///     field.
            using Cfgdata =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgValgetFields::Cfgdata
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValgetPoll message.
        struct CfgValgetPollFields : public TBase::message::CfgValgetPollFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValgetPollFields::Keys
            ///     field.
            using Keys =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgValgetPollFields::Keys
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::CfgValset message.
        struct CfgValsetFields : public TBase::message::CfgValsetFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::CfgValsetFields::Cfgdata
            ///     field.
            using Cfgdata =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::CfgValsetFields::Cfgdata
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::EsfMeas message.
        struct EsfMeasFields : public TBase::message::EsfMeasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::EsfMeasFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::EsfMeasFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::EsfRaw message.
        struct EsfRawFields : public TBase::message::EsfRawFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::EsfRawFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::EsfRawFields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::EsfStatus message.
        struct EsfStatusFields : public TBase::message::EsfStatusFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::EsfStatusFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::EsfStatusFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfDebug message.
        struct InfDebugFields : public TBase::message::InfDebugFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfDebugFields::Str
            ///     field.
            using Str =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::InfDebugFields::Str
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfError message.
        struct InfErrorFields : public TBase::message::InfErrorFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfErrorFields::Str
            ///     field.
            using Str =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::InfErrorFields::Str
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfNotice message.
        struct InfNoticeFields : public TBase::message::InfNoticeFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfNoticeFields::Str
            ///     field.
            using Str =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::InfNoticeFields::Str
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfTest message.
        struct InfTestFields : public TBase::message::InfTestFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfTestFields::Str
            ///     field.
            using Str =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::InfTestFields::Str
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::InfWarning message.
        struct InfWarningFields : public TBase::message::InfWarningFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::InfWarningFields::Str
            ///     field.
            using Str =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::InfWarningFields::Str
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::LogRetrieveposextra message.
        struct LogRetrieveposextraFields : public TBase::message::LogRetrieveposextraFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::LogRetrieveposextraFields::Reserved3
            ///     field.
            using Reserved3 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::LogRetrieveposextraFields::Reserved3
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::LogRetrievestring message.
        struct LogRetrievestringFields : public TBase::message::LogRetrievestringFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::LogRetrievestringFields::Bytes
            ///     field.
            using Bytes =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::LogRetrievestringFields::Bytes
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::LogString message.
        struct LogStringFields : public TBase::message::LogStringFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::LogStringFields::Bytes
            ///     field.
            using Bytes =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::LogStringFields::Bytes
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaAck message.
        struct MgaAckFields : public TBase::message::MgaAckFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaAckFields::MsgPayloadStart
            ///     field.
            using MsgPayloadStart =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MgaAckFields::MsgPayloadStart
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaAno message.
        struct MgaAnoFields : public TBase::message::MgaAnoFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaAnoFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MgaAnoFields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaBdsHealth message.
        struct MgaBdsHealthFields : public TBase::message::MgaBdsHealthFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaBdsHealthFields::HealthCode
            ///     field.
            using HealthCode =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MgaBdsHealthFields::HealthCode
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaDbd message.
        struct MgaDbdFields : public TBase::message::MgaDbdFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaDbdFields::Reserved1
            ///     field.
            using Reserved1 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MgaDbdFields::Reserved1
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaDbdFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MgaDbdFields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaFlashEph message.
        struct MgaFlashEphFields : public TBase::message::MgaFlashEphFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaFlashEphFields::Data
            ///     field.
            using Data =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MgaFlashEphFields::Data
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaGpsHealth message.
        struct MgaGpsHealthFields : public TBase::message::MgaGpsHealthFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaGpsHealthFields::HealthCode
            ///     field.
            using HealthCode =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MgaGpsHealthFields::HealthCode
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaIniEop message.
        struct MgaIniEopFields : public TBase::message::MgaIniEopFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaIniEopFields::Reserved2
            ///     field.
            using Reserved2 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MgaIniEopFields::Reserved2
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MgaQzssHealth message.
        struct MgaQzssHealthFields : public TBase::message::MgaQzssHealthFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MgaQzssHealthFields::HealthCode
            ///     field.
            using HealthCode =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MgaQzssHealthFields::HealthCode
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonComms message.
        struct MonCommsFields : public TBase::message::MonCommsFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonCommsFields::ProtIds
            ///     field.
            using ProtIds =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonCommsFields::ProtIds
                >;

            struct ListMembers : public TBase::message::MonCommsFields::ListMembers
            {
                struct ElementMembers : public TBase::message::MonCommsFields::ListMembers::ElementMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::MonCommsFields::ListMembers::ElementMembers::Msgs
                    ///     field.
                    using Msgs =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::MonCommsFields::ListMembers::ElementMembers::Msgs
                        >;
                }; // struct ElementMembers
            }; // struct ListMembers

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonCommsFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MonCommsFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonHw message.
        struct MonHwFields : public TBase::message::MonHwFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHwFields::VP
            ///     field.
            using VP =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonHwFields::VP
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonHw3 message.
        struct MonHw3Fields : public TBase::message::MonHw3Fields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHw3Fields::HwVersion
            ///     field.
            using HwVersion =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonHw3Fields::HwVersion
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHw3Fields::Reserved0
            ///     field.
            using Reserved0 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonHw3Fields::Reserved0
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonHw3Fields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MonHw3Fields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonIo message.
        struct MonIoFields : public TBase::message::MonIoFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonIoFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MonIoFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonMsgpp message.
        struct MonMsgppFields : public TBase::message::MonMsgppFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg1
            ///     field.
            using Msg1 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonMsgppFields::Msg1
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg2
            ///     field.
            using Msg2 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonMsgppFields::Msg2
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg3
            ///     field.
            using Msg3 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonMsgppFields::Msg3
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg4
            ///     field.
            using Msg4 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonMsgppFields::Msg4
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg5
            ///     field.
            using Msg5 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonMsgppFields::Msg5
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Msg6
            ///     field.
            using Msg6 =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonMsgppFields::Msg6
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonMsgppFields::Skipped
            ///     field.
            using Skipped =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonMsgppFields::Skipped
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonPatch message.
        struct MonPatchFields : public TBase::message::MonPatchFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonPatchFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MonPatchFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonRf message.
        struct MonRfFields : public TBase::message::MonRfFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRfFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MonRfFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonRxbuf message.
        struct MonRxbufFields : public TBase::message::MonRxbufFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRxbufFields::Pending
            ///     field.
            using Pending =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonRxbufFields::Pending
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRxbufFields::Usage
            ///     field.
            using Usage =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonRxbufFields::Usage
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonRxbufFields::PeakUsage
            ///     field.
            using PeakUsage =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonRxbufFields::PeakUsage
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonSpan message.
        struct MonSpanFields : public TBase::message::MonSpanFields
        {
            struct ListMembers : public TBase::message::MonSpanFields::ListMembers
            {
                struct ElementMembers : public TBase::message::MonSpanFields::ListMembers::ElementMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::MonSpanFields::ListMembers::ElementMembers::Spectrum
                    ///     field.
                    using Spectrum =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::MonSpanFields::ListMembers::ElementMembers::Spectrum
                        >;
                }; // struct ElementMembers
            }; // struct ListMembers

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonSpanFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MonSpanFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonTxbuf message.
        struct MonTxbufFields : public TBase::message::MonTxbufFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonTxbufFields::Pending
            ///     field.
            using Pending =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonTxbufFields::Pending
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonTxbufFields::Usage
            ///     field.
            using Usage =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonTxbufFields::Usage
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonTxbufFields::PeakUsage
            ///     field.
            using PeakUsage =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonTxbufFields::PeakUsage
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::MonVer message.
        struct MonVerFields : public TBase::message::MonVerFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonVerFields::SwVersion
            ///     field.
            using SwVersion =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonVerFields::SwVersion
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonVerFields::HwVersion
            ///     field.
            using HwVersion =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::MonVerFields::HwVersion
                >;

            struct ListMembers : public TBase::message::MonVerFields::ListMembers
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::message::MonVerFields::ListMembers::Extension
                ///     field.
                using Extension =
                    std::tuple<
                        comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                        typename TBase::message::MonVerFields::ListMembers::Extension
                    >;
            }; // struct ListMembers

            /// @brief Extra options for @ref
            ///     cc_ublox::message::MonVerFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::MonVerFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavDgps message.
        struct NavDgpsFields : public TBase::message::NavDgpsFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavDgpsFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavDgpsFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavGeofence message.
        struct NavGeofenceFields : public TBase::message::NavGeofenceFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavGeofenceFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavGeofenceFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavOrb message.
        struct NavOrbFields : public TBase::message::NavOrbFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavOrbFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavOrbFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSat message.
        struct NavSatFields : public TBase::message::NavSatFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSatFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavSatFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSbas message.
        struct NavSbasFields : public TBase::message::NavSbasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSbasFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavSbasFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSig message.
        struct NavSigFields : public TBase::message::NavSigFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSigFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavSigFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSlas message.
        struct NavSlasFields : public TBase::message::NavSlasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSlasFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavSlasFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::NavSvinfo message.
        struct NavSvinfoFields : public TBase::message::NavSvinfoFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::NavSvinfoFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::NavSvinfoFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmAlm message.
        struct RxmAlmFields : public TBase::message::RxmAlmFields
        {
            struct DwrdMembers : public TBase::message::RxmAlmFields::DwrdMembers
            {
                /// @brief Extra options for @ref
                ///     cc_ublox::message::RxmAlmFields::DwrdMembers::List
                ///     field.
                using List =
                    std::tuple<
                        comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                        typename TBase::message::RxmAlmFields::DwrdMembers::List
                    >;
            }; // struct DwrdMembers
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmEph message.
        struct RxmEphFields : public TBase::message::RxmEphFields
        {
            struct SfdMembers : public TBase::message::RxmEphFields::SfdMembers
            {
                struct ListsMembers : public TBase::message::RxmEphFields::SfdMembers::ListsMembers
                {
                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::RxmEphFields::SfdMembers::ListsMembers::Sf1d
                    ///     field.
                    using Sf1d =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::RxmEphFields::SfdMembers::ListsMembers::Sf1d
                        >;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::RxmEphFields::SfdMembers::ListsMembers::Sf2d
                    ///     field.
                    using Sf2d =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::RxmEphFields::SfdMembers::ListsMembers::Sf2d
                        >;

                    /// @brief Extra options for @ref
                    ///     cc_ublox::message::RxmEphFields::SfdMembers::ListsMembers::Sf3d
                    ///     field.
                    using Sf3d =
                        std::tuple<
                            comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                            typename TBase::message::RxmEphFields::SfdMembers::ListsMembers::Sf3d
                        >;
                }; // struct ListsMembers
            }; // struct SfdMembers
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmImes message.
        struct RxmImesFields : public TBase::message::RxmImesFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmImesFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::RxmImesFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmMeasx message.
        struct RxmMeasxFields : public TBase::message::RxmMeasxFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmMeasxFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::RxmMeasxFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRaw message.
        struct RxmRawFields : public TBase::message::RxmRawFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRawFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::RxmRawFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRawx message.
        struct RxmRawxFields : public TBase::message::RxmRawxFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRawxFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::RxmRawxFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRlmLong message.
        struct RxmRlmLongFields : public TBase::message::RxmRlmLongFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmLongFields::Beacon
            ///     field.
            using Beacon =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::RxmRlmLongFields::Beacon
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmLongFields::Params
            ///     field.
            using Params =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::RxmRlmLongFields::Params
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmRlmShort message.
        struct RxmRlmShortFields : public TBase::message::RxmRlmShortFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmShortFields::Beacon
            ///     field.
            using Beacon =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::RxmRlmShortFields::Beacon
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmRlmShortFields::Params
            ///     field.
            using Params =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::RxmRlmShortFields::Params
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmSfrb message.
        struct RxmSfrbFields : public TBase::message::RxmSfrbFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmSfrbFields::Dwrd
            ///     field.
            using Dwrd =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::RxmSfrbFields::Dwrd
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmSfrbx message.
        struct RxmSfrbxFields : public TBase::message::RxmSfrbxFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmSfrbxFields::Dwrd
            ///     field.
            using Dwrd =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::RxmSfrbxFields::Dwrd
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::RxmSvsi message.
        struct RxmSvsiFields : public TBase::message::RxmSvsiFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::RxmSvsiFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::RxmSvsiFields::List
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::SecSign message.
        struct SecSignFields : public TBase::message::SecSignFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::SecSignFields::Hash
            ///     field.
            using Hash =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::SecSignFields::Hash
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::SecUniqid message.
        struct SecUniqidFields : public TBase::message::SecUniqidFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::SecUniqidFields::UniqueId
            ///     field.
            using UniqueId =
                std::tuple<
                    comms::option::app::SequenceFixedSizeUseFixedSizeStorage,
                    typename TBase::message::SecUniqidFields::UniqueId
                >;
        };

        /// @brief Extra options for fields of
        ///     @ref cc_ublox::message::TimSmeas message.
        struct TimSmeasFields : public TBase::message::TimSmeasFields
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::message::TimSmeasFields::List
            ///     field.
            using List =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>,
                    typename TBase::message::TimSmeasFields::List
                >;
        };
    }; // struct message

    /// @brief Extra options for frames.
    struct frame : public TBase::frame
    {
        /// @brief Extra options for layers of
        ///     @ref cc_ublox::frame::UbloxFrame frame.
        struct UbloxFrameLayers : public TBase::frame::UbloxFrameLayers
        {
            /// @brief Extra options for @ref
            ///     cc_ublox::frame::UbloxFrameLayers::Payload
            ///     layer.
            using Payload =
                std::tuple<
                    comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE * 8>,
                    typename TBase::frame::UbloxFrameLayers::Payload
                >;

            /// @brief Extra options for @ref
            ///     cc_ublox::frame::UbloxFrameLayers::Id
            ///     layer.
            using Id =
                std::tuple<
                    comms::option::app::InPlaceAllocation,
                    typename TBase::frame::UbloxFrameLayers::Id
                >;
        }; // struct UbloxFrameLayers
    }; // struct frame
};

/// @brief Alias to @ref BareMetalDefaultOptionsT with default template parameter.
using BareMetalDefaultOptions = BareMetalDefaultOptionsT<>;

} // namespace options

} // namespace cc_ublox
