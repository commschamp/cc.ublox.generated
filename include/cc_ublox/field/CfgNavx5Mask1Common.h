// Generated by commsdsl2comms v6.3.3

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::field::CfgNavx5Mask1 field.

#pragma once

#include <type_traits>

namespace cc_ublox
{

namespace field
{

/// @brief Common types and functions for
///     @ref cc_ublox::field::CfgNavx5Mask1 field.
struct CfgNavx5Mask1Common
{
    /// @brief Name of the @ref cc_ublox::field::CfgNavx5Mask1 field.
    static const char* name()
    {
        return "mask1";
    }

    /// @brief Retrieve name of the bit of
    ///     @ref cc_ublox::field::CfgNavx5Mask1 field.
    static const char* bitName(std::size_t idx)
    {
        static const char* Map[] = {
            nullptr,
            nullptr,
            "minMax",
            "minCno",
            nullptr,
            nullptr,
            "initial3dfix",
            nullptr,
            nullptr,
            "wknRoll",
            "ackAid",
            nullptr,
            nullptr,
            "ppp",
            "aop"
        };

        static const std::size_t MapSize = std::extent<decltype(Map)>::value;
        if (MapSize <= idx) {
            return nullptr;
        }

        return Map[idx];
    }
};

} // namespace field

} // namespace cc_ublox
