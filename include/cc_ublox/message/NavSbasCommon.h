// Generated by commsdsl2comms v7.0.2

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::NavSbas message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>
#include <utility>
#include "cc_ublox/field/ItowCommon.h"
#include "cc_ublox/field/Res1Common.h"
#include "cc_ublox/field/Res2Common.h"
#include "cc_ublox/field/Res3Common.h"
#include "cc_ublox/field/SbasServiceCommon.h"
#include "cc_ublox/field/SbasSysCommon.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::NavSbas message.
/// @see cc_ublox::message::NavSbasFields
struct NavSbasFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::Itow field.
    using ItowCommon = cc_ublox::field::ItowCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::Geo field.
    struct GeoCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavSbasFields::Geo field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::NavSbasFields::Geo field.
        static const char* name()
        {
            return "geo";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::Mode field.
    struct ModeCommon
    {
        /// @brief Values enumerator for
        ///     @ref cc_ublox::message::NavSbasFields::Mode field.
        enum class ValueType : std::uint8_t
        {
            Disabled = 0, ///< value @b Disabled. 
            Integrity = 1, ///< value <b>Enabled Integrity</b>. 
            Testmode = 3, ///< value <b>Enabled Testmode</b>. 

            // --- Extra values generated for convenience ---
            FirstValue = 0, ///< First defined value.
            LastValue = 3, ///< Last defined value.
            ValuesLimit = 4, ///< Upper limit for defined values.
        };

        /// @brief Single value name info entry
        using ValueNameInfo = const char*;

        /// @brief Type returned from @ref valueNamesMap() member function.
        /// @details The @b first value of the pair is pointer to the map array,
        ///     The @b second value of the pair is the size of the array.
        using ValueNamesMapInfo = std::pair<const ValueNameInfo*, std::size_t>;

        /// @brief Name of the @ref cc_ublox::message::NavSbasFields::Mode field.
        static const char* name()
        {
            return "mode";
        }

        /// @brief Retrieve name of the enum value
        static const char* valueName(ValueType val)
        {
            auto namesMapInfo = valueNamesMap();
            if (namesMapInfo.second <= static_cast<std::size_t>(val)) {
                return nullptr;
            }

            return namesMapInfo.first[static_cast<std::size_t>(val)];
        }

        /// @brief Retrieve map of enum value names
        static ValueNamesMapInfo valueNamesMap()
        {
            static const char* Map[] = {
                "Disabled",
                "Enabled Integrity",
                nullptr,
                "Enabled Testmode"
            };
            static const std::size_t MapSize = std::extent<decltype(Map)>::value;

            return std::make_pair(&Map[0], MapSize);
        }
    };

    /// @brief Values enumerator for
    ///     @ref cc_ublox::message::NavSbasFields::Mode field.
    using ModeVal = ModeCommon::ValueType;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::Sys field.
    struct SysCommon : public cc_ublox::field::SbasSysCommon
    {
        /// @brief Name of the @ref cc_ublox::message::NavSbasFields::Sys field.
        static const char* name()
        {
            return "sys";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::Service field.
    struct ServiceCommon : public cc_ublox::field::SbasServiceCommon
    {
        /// @brief Name of the @ref cc_ublox::message::NavSbasFields::Service field.
        static const char* name()
        {
            return "service";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::Cnt field.
    struct CntCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavSbasFields::Cnt field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::NavSbasFields::Cnt field.
        static const char* name()
        {
            return "cnt";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::Reserved1 field.
    struct Reserved1Common : public cc_ublox::field::Res3Common
    {
        /// @brief Name of the @ref cc_ublox::message::NavSbasFields::Reserved1 field.
        static const char* name()
        {
            return "reserved1";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::NavSbasFields::List field.
    struct ListMembersCommon
    {
        /// @brief Scope for all the common definitions of the member fields of
        ///     @ref cc_ublox::message::NavSbasFields::ListMembers::Element field.
        struct ElementMembersCommon
        {
            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Svid field.
            struct SvidCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Svid field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Svid field.
                static const char* name()
                {
                    return "svid";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Flags field.
            struct FlagsCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Flags field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Flags field.
                static const char* name()
                {
                    return "flags";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Udre field.
            struct UdreCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Udre field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Udre field.
                static const char* name()
                {
                    return "udre";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::SvSys field.
            struct SvSysCommon : public cc_ublox::field::SbasSysCommon
            {
                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::SvSys field.
                static const char* name()
                {
                    return "svSys";
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::SvService field.
            struct SvServiceCommon : public cc_ublox::field::SbasServiceCommon
            {
                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::SvService field.
                static const char* name()
                {
                    return "svService";
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Reserved2 field.
            struct Reserved2Common : public cc_ublox::field::Res1Common
            {
                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Reserved2 field.
                static const char* name()
                {
                    return "reserved2";
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Prc field.
            struct PrcCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Prc field.
                using ValueType = std::int16_t;

                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Prc field.
                static const char* name()
                {
                    return "prc";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Reserved3 field.
            struct Reserved3Common : public cc_ublox::field::Res2Common
            {
                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Reserved3 field.
                static const char* name()
                {
                    return "reserved3";
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Ic field.
            struct IcCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Ic field.
                using ValueType = std::int16_t;

                /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::ElementMembers::Ic field.
                static const char* name()
                {
                    return "ic";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };
        };

        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::NavSbasFields::ListMembers::Element field.
        struct ElementCommon
        {
            /// @brief Name of the @ref cc_ublox::message::NavSbasFields::ListMembers::Element field.
            static const char* name()
            {
                return "";
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavSbasFields::List field.
    struct ListCommon
    {
        /// @brief Name of the @ref cc_ublox::message::NavSbasFields::List field.
        static const char* name()
        {
            return "list";
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::NavSbas message.
struct NavSbasCommon
{
    /// @brief Name of the @ref cc_ublox::message::NavSbas message.
    static const char* name()
    {
        return "NAV-SBAS";
    }
};

} // namespace message

} // namespace cc_ublox
