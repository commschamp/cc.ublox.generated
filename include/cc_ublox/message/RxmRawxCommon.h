// Generated by commsdsl2comms v5.2.0

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::RxmRawx message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>
#include "cc_ublox/field/GnssIdCommon.h"
#include "cc_ublox/field/Res1Common.h"
#include "cc_ublox/field/Res2Common.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::RxmRawx message.
/// @see cc_ublox::message::RxmRawxFields
struct RxmRawxFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::RcvTow field.
    struct RcvTowCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmRawxFields::RcvTow field.
        using ValueType = double;

        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::RcvTow field.
        static const char* name()
        {
            return "rcvTow";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::Week field.
    struct WeekCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmRawxFields::Week field.
        using ValueType = std::uint16_t;

        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::Week field.
        static const char* name()
        {
            return "week";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::LeapS field.
    struct LeapSCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmRawxFields::LeapS field.
        using ValueType = std::int8_t;

        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::LeapS field.
        static const char* name()
        {
            return "leapS";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::NumMeas field.
    struct NumMeasCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmRawxFields::NumMeas field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::NumMeas field.
        static const char* name()
        {
            return "numMeas";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::RecStat field.
    struct RecStatCommon
    {
        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::RecStat field.
        static const char* name()
        {
            return "recStat";
        }

        /// @brief Retrieve name of the bit of
        ///     @ref cc_ublox::message::RxmRawxFields::RecStat field.
        static const char* bitName(std::size_t idx)
        {
            static const char* Map[] = {
                "leapSec",
                "clkReset"
            };

            static const std::size_t MapSize = std::extent<decltype(Map)>::value;
            if (MapSize <= idx) {
                return nullptr;
            }

            return Map[idx];
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::Version field.
    struct VersionCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmRawxFields::Version field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::Version field.
        static const char* name()
        {
            return "version";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::Reserved1 field.
    struct Reserved1Common : public cc_ublox::field::Res2Common
    {
        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::Reserved1 field.
        static const char* name()
        {
            return "reserved1";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::RxmRawxFields::List field.
    struct ListMembersCommon
    {
        /// @brief Scope for all the common definitions of the member fields of
        ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::Element field.
        struct ElementMembersCommon
        {
            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::PrMes field.
            struct PrMesCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::PrMes field.
                using ValueType = double;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::PrMes field.
                static const char* name()
                {
                    return "prMes";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::CpMes field.
            struct CpMesCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::CpMes field.
                using ValueType = double;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::CpMes field.
                static const char* name()
                {
                    return "cpMes";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::DoMes field.
            struct DoMesCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::DoMes field.
                using ValueType = float;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::DoMes field.
                static const char* name()
                {
                    return "doMes";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::GnssId field.
            using GnssIdCommon = cc_ublox::field::GnssIdCommon;

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Svid field.
            struct SvidCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Svid field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Svid field.
                static const char* name()
                {
                    return "svid";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::SigId field.
            struct SigIdCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::SigId field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::SigId field.
                static const char* name()
                {
                    return "sigId";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::FreqId field.
            struct FreqIdCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::FreqId field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::FreqId field.
                static const char* name()
                {
                    return "freqId";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Locktime field.
            struct LocktimeCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Locktime field.
                using ValueType = std::uint16_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Locktime field.
                static const char* name()
                {
                    return "locktime";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Cno field.
            struct CnoCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Cno field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Cno field.
                static const char* name()
                {
                    return "cno";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::PrStdev field.
            struct PrStdevCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::PrStdev field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::PrStdev field.
                static const char* name()
                {
                    return "prStdev";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::CpStdev field.
            struct CpStdevCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::CpStdev field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::CpStdev field.
                static const char* name()
                {
                    return "cpStdev";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::DoStdev field.
            struct DoStdevCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::DoStdev field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::DoStdev field.
                static const char* name()
                {
                    return "doStdev";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::TrkStat field.
            struct TrkStatCommon
            {
                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::TrkStat field.
                static const char* name()
                {
                    return "trkStat";
                }

                /// @brief Retrieve name of the bit of
                ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::TrkStat field.
                static const char* bitName(std::size_t idx)
                {
                    static const char* Map[] = {
                        "prValid",
                        "cpValid",
                        "halfCyc",
                        "subHalfCyc"
                    };

                    static const std::size_t MapSize = std::extent<decltype(Map)>::value;
                    if (MapSize <= idx) {
                        return nullptr;
                    }

                    return Map[idx];
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Reserved3 field.
            struct Reserved3Common : public cc_ublox::field::Res1Common
            {
                /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::ElementMembers::Reserved3 field.
                static const char* name()
                {
                    return "reserved3";
                }
            };
        };

        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::RxmRawxFields::ListMembers::Element field.
        struct ElementCommon
        {
            /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::ListMembers::Element field.
            static const char* name()
            {
                return "";
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmRawxFields::List field.
    struct ListCommon
    {
        /// @brief Name of the @ref cc_ublox::message::RxmRawxFields::List field.
        static const char* name()
        {
            return "list";
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::RxmRawx message.
struct RxmRawxCommon
{
    /// @brief Name of the @ref cc_ublox::message::RxmRawx message.
    static const char* name()
    {
        return "RXM-RAWX";
    }
};

} // namespace message

} // namespace cc_ublox
