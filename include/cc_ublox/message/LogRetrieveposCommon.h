// Generated by commsdsl2comms v6.3.3

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::LogRetrievepos message and its fields.

#pragma once

#include <cstdint>
#include "cc_ublox/field/DayCommon.h"
#include "cc_ublox/field/GpsFixCommon.h"
#include "cc_ublox/field/HAccCommon.h"
#include "cc_ublox/field/HMSLCommon.h"
#include "cc_ublox/field/HeadingCommon.h"
#include "cc_ublox/field/HourCommon.h"
#include "cc_ublox/field/LatCommon.h"
#include "cc_ublox/field/LonCommon.h"
#include "cc_ublox/field/MinCommon.h"
#include "cc_ublox/field/MonthCommon.h"
#include "cc_ublox/field/Res1Common.h"
#include "cc_ublox/field/SecCommon.h"
#include "cc_ublox/field/YearCommon.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::LogRetrievepos message.
/// @see cc_ublox::message::LogRetrieveposFields
struct LogRetrieveposFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::EntryIndex field.
    struct EntryIndexCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::LogRetrieveposFields::EntryIndex field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::EntryIndex field.
        static const char* name()
        {
            return "entryIndex";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Lon field.
    using LonCommon = cc_ublox::field::LonCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Lat field.
    using LatCommon = cc_ublox::field::LatCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::HMSL field.
    using HMSLCommon = cc_ublox::field::HMSLCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::HAcc field.
    using HAccCommon = cc_ublox::field::HAccCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::GSpeed field.
    struct GSpeedCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::LogRetrieveposFields::GSpeed field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::GSpeed field.
        static const char* name()
        {
            return "gSpeed";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Heading field.
    using HeadingCommon = cc_ublox::field::HeadingCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Version field.
    struct VersionCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::LogRetrieveposFields::Version field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::Version field.
        static const char* name()
        {
            return "version";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::FixType field.
    struct FixTypeCommon : public cc_ublox::field::GpsFixCommon
    {
        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::FixType field.
        static const char* name()
        {
            return "fixType";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Year field.
    using YearCommon = cc_ublox::field::YearCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Month field.
    using MonthCommon = cc_ublox::field::MonthCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Day field.
    using DayCommon = cc_ublox::field::DayCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Hour field.
    using HourCommon = cc_ublox::field::HourCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Minute field.
    struct MinuteCommon : public cc_ublox::field::MinCommon
    {
        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::Minute field.
        static const char* name()
        {
            return "minute";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Second field.
    struct SecondCommon : public cc_ublox::field::SecCommon
    {
        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::Second field.
        static const char* name()
        {
            return "second";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Reserved1 field.
    struct Reserved1Common : public cc_ublox::field::Res1Common
    {
        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::Reserved1 field.
        static const char* name()
        {
            return "reserved1";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::NumSV field.
    struct NumSVCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::LogRetrieveposFields::NumSV field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::NumSV field.
        static const char* name()
        {
            return "numSV";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::LogRetrieveposFields::Reserved2 field.
    struct Reserved2Common : public cc_ublox::field::Res1Common
    {
        /// @brief Name of the @ref cc_ublox::message::LogRetrieveposFields::Reserved2 field.
        static const char* name()
        {
            return "reserved2";
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::LogRetrievepos message.
struct LogRetrieveposCommon
{
    /// @brief Name of the @ref cc_ublox::message::LogRetrievepos message.
    static const char* name()
    {
        return "LOG-RETRIEVEPOS";
    }
};

} // namespace message

} // namespace cc_ublox
