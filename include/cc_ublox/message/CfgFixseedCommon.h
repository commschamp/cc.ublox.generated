// Generated by commsdsl2comms v6.0.0

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::CfgFixseed message and its fields.

#pragma once

#include <cstdint>
#include "cc_ublox/field/Res2Common.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::CfgFixseed message.
/// @see cc_ublox::message::CfgFixseedFields
struct CfgFixseedFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::CfgFixseedFields::Version field.
    struct VersionCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::CfgFixseedFields::Version field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::CfgFixseedFields::Version field.
        static const char* name()
        {
            return "version";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::CfgFixseedFields::Length field.
    struct LengthCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::CfgFixseedFields::Length field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::CfgFixseedFields::Length field.
        static const char* name()
        {
            return "length";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::CfgFixseedFields::Reserved1 field.
    struct Reserved1Common : public cc_ublox::field::Res2Common
    {
        /// @brief Name of the @ref cc_ublox::message::CfgFixseedFields::Reserved1 field.
        static const char* name()
        {
            return "reserved1";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::CfgFixseedFields::SeedHi field.
    struct SeedHiCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::CfgFixseedFields::SeedHi field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::CfgFixseedFields::SeedHi field.
        static const char* name()
        {
            return "seedHi";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::CfgFixseedFields::SeedLo field.
    struct SeedLoCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::CfgFixseedFields::SeedLo field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::CfgFixseedFields::SeedLo field.
        static const char* name()
        {
            return "seedLo";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::CfgFixseedFields::List field.
    struct ListCommon
    {
        /// @brief Name of the @ref cc_ublox::message::CfgFixseedFields::List field.
        static const char* name()
        {
            return "list";
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::CfgFixseed message.
struct CfgFixseedCommon
{
    /// @brief Name of the @ref cc_ublox::message::CfgFixseed message.
    static const char* name()
    {
        return "CFG-FIXSEED";
    }
};

} // namespace message

} // namespace cc_ublox
