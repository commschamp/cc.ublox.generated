// Generated by commsdsl2comms v6.0.0

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::AidIni message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::AidIni message.
/// @see cc_ublox::message::AidIniFields
struct AidIniFieldsCommon
{
    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::EcefX field.
    struct EcefXMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::EcefXMembers::EcefX field.
        struct EcefXCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::EcefXMembers::EcefX field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::EcefXMembers::EcefX field.
            static const char* name()
            {
                return "ecefX";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::EcefX field.
    struct EcefXCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::EcefX field.
        static const char* name()
        {
            return "ecefX";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Lat field.
    struct LatMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::LatMembers::Lat field.
        struct LatCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::LatMembers::Lat field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::LatMembers::Lat field.
            static const char* name()
            {
                return "lat";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Lat field.
    struct LatCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Lat field.
        static const char* name()
        {
            return "lat";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::EcefY field.
    struct EcefYMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::EcefYMembers::EcefY field.
        struct EcefYCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::EcefYMembers::EcefY field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::EcefYMembers::EcefY field.
            static const char* name()
            {
                return "ecefY";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::EcefY field.
    struct EcefYCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::EcefY field.
        static const char* name()
        {
            return "ecefY";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Lon field.
    struct LonMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::LonMembers::Lon field.
        struct LonCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::LonMembers::Lon field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::LonMembers::Lon field.
            static const char* name()
            {
                return "lon";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Lon field.
    struct LonCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Lon field.
        static const char* name()
        {
            return "lon";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::EcefZ field.
    struct EcefZMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::EcefZMembers::EcefZ field.
        struct EcefZCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::EcefZMembers::EcefZ field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::EcefZMembers::EcefZ field.
            static const char* name()
            {
                return "ecefZ";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::EcefZ field.
    struct EcefZCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::EcefZ field.
        static const char* name()
        {
            return "ecefZ";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Alt field.
    struct AltMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::AltMembers::Alt field.
        struct AltCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::AltMembers::Alt field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::AltMembers::Alt field.
            static const char* name()
            {
                return "alt";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Alt field.
    struct AltCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Alt field.
        static const char* name()
        {
            return "alt";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::PosAcc field.
    struct PosAccCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::AidIniFields::PosAcc field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::AidIniFields::PosAcc field.
        static const char* name()
        {
            return "posAcc";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::TmCfg field.
    struct TmCfgCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::TmCfg field.
        static const char* name()
        {
            return "tmCfg";
        }

        /// @brief Retrieve name of the bit of
        ///     @ref cc_ublox::message::AidIniFields::TmCfg field.
        static const char* bitName(std::size_t idx)
        {
            static const char* Map[] = {
                nullptr,
                "fEdge",
                nullptr,
                nullptr,
                "tm1",
                nullptr,
                "f1"
            };

            static const std::size_t MapSize = std::extent<decltype(Map)>::value;
            if (MapSize <= idx) {
                return nullptr;
            }

            return Map[idx];
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Wno field.
    struct WnoMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::WnoMembers::Wno field.
        struct WnoCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::WnoMembers::Wno field.
            using ValueType = std::uint16_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::WnoMembers::Wno field.
            static const char* name()
            {
                return "wno";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Wno field.
    struct WnoCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Wno field.
        static const char* name()
        {
            return "wno";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Date field.
    struct DateMembersCommon
    {
        /// @brief Scope for all the common definitions of the member fields of
        ///     @ref cc_ublox::message::AidIniFields::DateMembers::DateBundle field.
        struct DateBundleMembersCommon
        {
            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::AidIniFields::DateMembers::DateBundleMembers::Year field.
            struct YearCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::AidIniFields::DateMembers::DateBundleMembers::Year field.
                using ValueType = std::int16_t;

                /// @brief Name of the @ref cc_ublox::message::AidIniFields::DateMembers::DateBundleMembers::Year field.
                static const char* name()
                {
                    return "year";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::AidIniFields::DateMembers::DateBundleMembers::Month field.
            struct MonthCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::AidIniFields::DateMembers::DateBundleMembers::Month field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::AidIniFields::DateMembers::DateBundleMembers::Month field.
                static const char* name()
                {
                    return "month";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };
        };

        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::DateMembers::DateBundle field.
        struct DateBundleCommon
        {
            /// @brief Name of the @ref cc_ublox::message::AidIniFields::DateMembers::DateBundle field.
            static const char* name()
            {
                return "";
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Date field.
    struct DateCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Date field.
        static const char* name()
        {
            return "date";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Tow field.
    struct TowMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::TowMembers::Tow field.
        struct TowCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::TowMembers::Tow field.
            using ValueType = std::uint32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::TowMembers::Tow field.
            static const char* name()
            {
                return "tow";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Tow field.
    struct TowCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Tow field.
        static const char* name()
        {
            return "tow";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Time field.
    struct TimeMembersCommon
    {
        /// @brief Scope for all the common definitions of the member fields of
        ///     @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundle field.
        struct TimeBundleMembersCommon
        {
            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Day field.
            struct DayCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Day field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Day field.
                static const char* name()
                {
                    return "day";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Hour field.
            struct HourCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Hour field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Hour field.
                static const char* name()
                {
                    return "hour";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Min field.
            struct MinCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Min field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Min field.
                static const char* name()
                {
                    return "min";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Sec field.
            struct SecCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Sec field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundleMembers::Sec field.
                static const char* name()
                {
                    return "sec";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };
        };

        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundle field.
        struct TimeBundleCommon
        {
            /// @brief Name of the @ref cc_ublox::message::AidIniFields::TimeMembers::TimeBundle field.
            static const char* name()
            {
                return "";
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Time field.
    struct TimeCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Time field.
        static const char* name()
        {
            return "time";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::TowNs field.
    struct TowNsCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::AidIniFields::TowNs field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::AidIniFields::TowNs field.
        static const char* name()
        {
            return "towNs";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::TAccMs field.
    struct TAccMsCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::AidIniFields::TAccMs field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::AidIniFields::TAccMs field.
        static const char* name()
        {
            return "tAccMs";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::TAccNs field.
    struct TAccNsCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::AidIniFields::TAccNs field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::AidIniFields::TAccNs field.
        static const char* name()
        {
            return "tAccNs";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::ClkD field.
    struct ClkDMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::ClkDMembers::ClkD field.
        struct ClkDCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::ClkDMembers::ClkD field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::ClkDMembers::ClkD field.
            static const char* name()
            {
                return "clkD";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::ClkD field.
    struct ClkDCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::ClkD field.
        static const char* name()
        {
            return "clkD";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::Freq field.
    struct FreqMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::FreqMembers::Freq field.
        struct FreqCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::FreqMembers::Freq field.
            using ValueType = std::int32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::FreqMembers::Freq field.
            static const char* name()
            {
                return "freq";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Freq field.
    struct FreqCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Freq field.
        static const char* name()
        {
            return "freq";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::ClkDAcc field.
    struct ClkDAccMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::ClkDAccMembers::ClkDAcc field.
        struct ClkDAccCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::ClkDAccMembers::ClkDAcc field.
            using ValueType = std::uint32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::ClkDAccMembers::ClkDAcc field.
            static const char* name()
            {
                return "clkDAcc";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::ClkDAcc field.
    struct ClkDAccCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::ClkDAcc field.
        static const char* name()
        {
            return "clkDAcc";
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::AidIniFields::FreqAcc field.
    struct FreqAccMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::AidIniFields::FreqAccMembers::FreqAcc field.
        struct FreqAccCommon
        {
            /// @brief Re-definition of the value type used by
            ///     cc_ublox::message::AidIniFields::FreqAccMembers::FreqAcc field.
            using ValueType = std::uint32_t;

            /// @brief Name of the @ref cc_ublox::message::AidIniFields::FreqAccMembers::FreqAcc field.
            static const char* name()
            {
                return "freqAcc";
            }

            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::FreqAcc field.
    struct FreqAccCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::FreqAcc field.
        static const char* name()
        {
            return "freqAcc";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::AidIniFields::Flags field.
    struct FlagsCommon
    {
        /// @brief Name of the @ref cc_ublox::message::AidIniFields::Flags field.
        static const char* name()
        {
            return "flags";
        }

        /// @brief Retrieve name of the bit of
        ///     @ref cc_ublox::message::AidIniFields::Flags field.
        static const char* bitName(std::size_t idx)
        {
            static const char* Map[] = {
                "pos",
                "time",
                "clockD",
                "tp",
                "clockF",
                "lla",
                "altInv",
                "prevTm",
                nullptr,
                nullptr,
                "utc"
            };

            static const std::size_t MapSize = std::extent<decltype(Map)>::value;
            if (MapSize <= idx) {
                return nullptr;
            }

            return Map[idx];
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::AidIni message.
struct AidIniCommon
{
    /// @brief Name of the @ref cc_ublox::message::AidIni message.
    static const char* name()
    {
        return "AID-INI";
    }
};

} // namespace message

} // namespace cc_ublox
