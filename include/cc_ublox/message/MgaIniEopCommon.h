// Generated by commsdsl2comms v7.0.0

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::MgaIniEop message and its fields.

#pragma once

#include <cstdint>
#include "cc_ublox/field/Res2Common.h"
#include "cc_ublox/field/Res4Common.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::MgaIniEop message.
/// @see cc_ublox::message::MgaIniEopFields
struct MgaIniEopFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::Type field.
    struct TypeCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::Type field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::Type field.
        static const char* name()
        {
            return "type";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::Version field.
    struct VersionCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::Version field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::Version field.
        static const char* name()
        {
            return "version";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::Reserved1 field.
    struct Reserved1Common : public cc_ublox::field::Res2Common
    {
        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::Reserved1 field.
        static const char* name()
        {
            return "reserved1";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::D2kRef field.
    struct D2kRefCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::D2kRef field.
        using ValueType = std::uint16_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::D2kRef field.
        static const char* name()
        {
            return "d2kRef";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::D2kMax field.
    struct D2kMaxCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::D2kMax field.
        using ValueType = std::uint16_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::D2kMax field.
        static const char* name()
        {
            return "d2kMax";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::XpP0 field.
    struct XpP0Common
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::XpP0 field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::XpP0 field.
        static const char* name()
        {
            return "xpP0";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::XpP1 field.
    struct XpP1Common
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::XpP1 field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::XpP1 field.
        static const char* name()
        {
            return "xpP1";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::YpP0 field.
    struct YpP0Common
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::YpP0 field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::YpP0 field.
        static const char* name()
        {
            return "ypP0";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::YpP1 field.
    struct YpP1Common
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::YpP1 field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::YpP1 field.
        static const char* name()
        {
            return "ypP1";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::DUT1 field.
    struct DUT1Common
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::DUT1 field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::DUT1 field.
        static const char* name()
        {
            return "dUT1";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::DdUT1 field.
    struct DdUT1Common
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::MgaIniEopFields::DdUT1 field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::DdUT1 field.
        static const char* name()
        {
            return "ddUT1";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::MgaIniEopFields::Reserved2 field.
    struct Reserved2MembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::MgaIniEopFields::Reserved2Members::Element field.
        struct ElementCommon : public cc_ublox::field::Res4Common
        {
            /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::Reserved2Members::Element field.
            static const char* name()
            {
                return "";
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::MgaIniEopFields::Reserved2 field.
    struct Reserved2Common
    {
        /// @brief Name of the @ref cc_ublox::message::MgaIniEopFields::Reserved2 field.
        static const char* name()
        {
            return "reserved2";
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::MgaIniEop message.
struct MgaIniEopCommon
{
    /// @brief Name of the @ref cc_ublox::message::MgaIniEop message.
    static const char* name()
    {
        return "MGA-BDS-EOP";
    }
};

} // namespace message

} // namespace cc_ublox
