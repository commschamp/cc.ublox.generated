// Generated by commsdsl2comms v6.3.0

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::NavHpposllh message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>
#include "cc_ublox/field/HMSLCommon.h"
#include "cc_ublox/field/HeightCommon.h"
#include "cc_ublox/field/ItowCommon.h"
#include "cc_ublox/field/LatCommon.h"
#include "cc_ublox/field/LonCommon.h"
#include "cc_ublox/field/Res2Common.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::NavHpposllh message.
/// @see cc_ublox::message::NavHpposllhFields
struct NavHpposllhFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::Version field.
    struct VersionCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavHpposllhFields::Version field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::Version field.
        static const char* name()
        {
            return "version";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::Reserved1 field.
    struct Reserved1Common : public cc_ublox::field::Res2Common
    {
        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::Reserved1 field.
        static const char* name()
        {
            return "reserved1";
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::Flags field.
    struct FlagsCommon
    {
        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::Flags field.
        static const char* name()
        {
            return "flags";
        }

        /// @brief Retrieve name of the bit of
        ///     @ref cc_ublox::message::NavHpposllhFields::Flags field.
        static const char* bitName(std::size_t idx)
        {
            static const char* Map[] = {
                "invalidLlh"
            };

            static const std::size_t MapSize = std::extent<decltype(Map)>::value;
            if (MapSize <= idx) {
                return nullptr;
            }

            return Map[idx];
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::Itow field.
    using ItowCommon = cc_ublox::field::ItowCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::Lon field.
    using LonCommon = cc_ublox::field::LonCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::Lat field.
    using LatCommon = cc_ublox::field::LatCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::Height field.
    using HeightCommon = cc_ublox::field::HeightCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::HMSL field.
    using HMSLCommon = cc_ublox::field::HMSLCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::LonHp field.
    struct LonHpCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavHpposllhFields::LonHp field.
        using ValueType = std::int8_t;

        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::LonHp field.
        static const char* name()
        {
            return "lonHp";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::LatHp field.
    struct LatHpCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavHpposllhFields::LatHp field.
        using ValueType = std::int8_t;

        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::LatHp field.
        static const char* name()
        {
            return "latHp";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::HeigthHp field.
    struct HeigthHpCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavHpposllhFields::HeigthHp field.
        using ValueType = std::int8_t;

        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::HeigthHp field.
        static const char* name()
        {
            return "heigthHp";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::HMSLHp field.
    struct HMSLHpCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavHpposllhFields::HMSLHp field.
        using ValueType = std::int8_t;

        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::HMSLHp field.
        static const char* name()
        {
            return "hMSLHp";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::HAcc field.
    struct HAccCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavHpposllhFields::HAcc field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::HAcc field.
        static const char* name()
        {
            return "hAcc";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavHpposllhFields::VAcc field.
    struct VAccCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavHpposllhFields::VAcc field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::NavHpposllhFields::VAcc field.
        static const char* name()
        {
            return "vAcc";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::NavHpposllh message.
struct NavHpposllhCommon
{
    /// @brief Name of the @ref cc_ublox::message::NavHpposllh message.
    static const char* name()
    {
        return "NAV-HPPOSLLH";
    }
};

} // namespace message

} // namespace cc_ublox
