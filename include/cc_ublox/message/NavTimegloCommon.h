// Generated by commsdsl2comms v6.2.4

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::NavTimeglo message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>
#include "cc_ublox/field/ItowCommon.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::NavTimeglo message.
/// @see cc_ublox::message::NavTimegloFields
struct NavTimegloFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavTimegloFields::Itow field.
    using ItowCommon = cc_ublox::field::ItowCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavTimegloFields::TOD field.
    struct TODCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavTimegloFields::TOD field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::NavTimegloFields::TOD field.
        static const char* name()
        {
            return "TOD";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavTimegloFields::FTOD field.
    struct FTODCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavTimegloFields::FTOD field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_ublox::message::NavTimegloFields::FTOD field.
        static const char* name()
        {
            return "fTOD";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavTimegloFields::Nt field.
    struct NtCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavTimegloFields::Nt field.
        using ValueType = std::uint16_t;

        /// @brief Name of the @ref cc_ublox::message::NavTimegloFields::Nt field.
        static const char* name()
        {
            return "Nt";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavTimegloFields::N4 field.
    struct N4Common
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavTimegloFields::N4 field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::NavTimegloFields::N4 field.
        static const char* name()
        {
            return "N4";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavTimegloFields::Valid field.
    struct ValidCommon
    {
        /// @brief Name of the @ref cc_ublox::message::NavTimegloFields::Valid field.
        static const char* name()
        {
            return "valid";
        }

        /// @brief Retrieve name of the bit of
        ///     @ref cc_ublox::message::NavTimegloFields::Valid field.
        static const char* bitName(std::size_t idx)
        {
            static const char* Map[] = {
                "todValid",
                "dateValid"
            };

            static const std::size_t MapSize = std::extent<decltype(Map)>::value;
            if (MapSize <= idx) {
                return nullptr;
            }

            return Map[idx];
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::NavTimegloFields::TAcc field.
    struct TAccCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::NavTimegloFields::TAcc field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_ublox::message::NavTimegloFields::TAcc field.
        static const char* name()
        {
            return "tAcc";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::NavTimeglo message.
struct NavTimegloCommon
{
    /// @brief Name of the @ref cc_ublox::message::NavTimeglo message.
    static const char* name()
    {
        return "NAV-TIMEGLO";
    }
};

} // namespace message

} // namespace cc_ublox
