// Generated by commsdsl2comms v5.1.2

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_ublox::message::RxmSvsi message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>
#include "cc_ublox/field/ItowCommon.h"

namespace cc_ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_ublox::message::RxmSvsi message.
/// @see cc_ublox::message::RxmSvsiFields
struct RxmSvsiFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmSvsiFields::Itow field.
    using ItowCommon = cc_ublox::field::ItowCommon;

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmSvsiFields::Week field.
    struct WeekCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmSvsiFields::Week field.
        using ValueType = std::int16_t;

        /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::Week field.
        static const char* name()
        {
            return "week";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmSvsiFields::NumVis field.
    struct NumVisCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmSvsiFields::NumVis field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::NumVis field.
        static const char* name()
        {
            return "numVis";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmSvsiFields::NumSV field.
    struct NumSVCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_ublox::message::RxmSvsiFields::NumSV field.
        using ValueType = std::uint8_t;

        /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::NumSV field.
        static const char* name()
        {
            return "numSV";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref cc_ublox::message::RxmSvsiFields::List field.
    struct ListMembersCommon
    {
        /// @brief Scope for all the common definitions of the member fields of
        ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::Element field.
        struct ElementMembersCommon
        {
            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Svid field.
            struct SvidCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Svid field.
                using ValueType = std::uint8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Svid field.
                static const char* name()
                {
                    return "svid";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Scope for all the common definitions of the member fields of
            ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlag field.
            struct SvFlagMembersCommon
            {
                /// @brief Common types and functions for
                ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlagMembers::Ura field.
                struct UraCommon
                {
                    /// @brief Re-definition of the value type used by
                    ///     cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlagMembers::Ura field.
                    using ValueType = std::uint8_t;

                    /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlagMembers::Ura field.
                    static const char* name()
                    {
                        return "ura";
                    }

                    /// @brief Compile time detection of special values presence.
                    static constexpr bool hasSpecials()
                    {
                        return false;
                    }
                };

                /// @brief Common types and functions for
                ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlagMembers::Bits field.
                struct BitsCommon
                {
                    /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlagMembers::Bits field.
                    static const char* name()
                    {
                        return "";
                    }

                    /// @brief Retrieve name of the bit of
                    ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlagMembers::Bits field.
                    static const char* bitName(std::size_t idx)
                    {
                        static const char* Map[] = {
                            "healthy",
                            "ephVal",
                            "almVal",
                            "notAvail"
                        };

                        static const std::size_t MapSize = std::extent<decltype(Map)>::value;
                        if (MapSize <= idx) {
                            return nullptr;
                        }

                        return Map[idx];
                    }
                };
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlag field.
            struct SvFlagCommon
            {
                /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::SvFlag field.
                static const char* name()
                {
                    return "svFlag";
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Azim field.
            struct AzimCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Azim field.
                using ValueType = std::int16_t;

                /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Azim field.
                static const char* name()
                {
                    return "azim";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Elev field.
            struct ElevCommon
            {
                /// @brief Re-definition of the value type used by
                ///     cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Elev field.
                using ValueType = std::int8_t;

                /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Elev field.
                static const char* name()
                {
                    return "elev";
                }

                /// @brief Compile time detection of special values presence.
                static constexpr bool hasSpecials()
                {
                    return false;
                }
            };

            /// @brief Scope for all the common definitions of the member fields of
            ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Age field.
            struct AgeMembersCommon
            {
                /// @brief Common types and functions for
                ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::AgeMembers::AlmAge field.
                struct AlmAgeCommon
                {
                    /// @brief Re-definition of the value type used by
                    ///     cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::AgeMembers::AlmAge field.
                    using ValueType = std::uint8_t;

                    /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::AgeMembers::AlmAge field.
                    static const char* name()
                    {
                        return "almAge";
                    }

                    /// @brief Compile time detection of special values presence.
                    static constexpr bool hasSpecials()
                    {
                        return false;
                    }
                };

                /// @brief Common types and functions for
                ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::AgeMembers::EphAge field.
                struct EphAgeCommon
                {
                    /// @brief Re-definition of the value type used by
                    ///     cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::AgeMembers::EphAge field.
                    using ValueType = std::uint8_t;

                    /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::AgeMembers::EphAge field.
                    static const char* name()
                    {
                        return "ephAge";
                    }

                    /// @brief Compile time detection of special values presence.
                    static constexpr bool hasSpecials()
                    {
                        return false;
                    }
                };
            };

            /// @brief Common types and functions for
            ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Age field.
            struct AgeCommon
            {
                /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::ElementMembers::Age field.
                static const char* name()
                {
                    return "age";
                }
            };
        };

        /// @brief Common types and functions for
        ///     @ref cc_ublox::message::RxmSvsiFields::ListMembers::Element field.
        struct ElementCommon
        {
            /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::ListMembers::Element field.
            static const char* name()
            {
                return "";
            }
        };
    };

    /// @brief Common types and functions for
    ///     @ref cc_ublox::message::RxmSvsiFields::List field.
    struct ListCommon
    {
        /// @brief Name of the @ref cc_ublox::message::RxmSvsiFields::List field.
        static const char* name()
        {
            return "list";
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_ublox::message::RxmSvsi message.
struct RxmSvsiCommon
{
    /// @brief Name of the @ref cc_ublox::message::RxmSvsi message.
    static const char* name()
    {
        return "RXM-SVSI";
    }
};

} // namespace message

} // namespace cc_ublox
