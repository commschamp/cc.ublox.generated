// Generated by commsdsl2comms v6.2.1

/// @file
/// @brief Contains message factory with dynamic memory allocation for the server input "ublox7" platform specific messages.

#pragma once

#include <memory>
#include "cc_ublox/input/Ublox7ServerInputMessages.h"
#include "comms/MsgFactoryCreateFailureReason.h"

namespace cc_ublox
{

namespace factory
{

/// @brief Message factory with dynamic memory allocation for the server input "ublox7" platform specific messages.
/// @details Defines the same public interface as @b comms::MsgFactory and intended for
///     its replacement.
/// @tparam TInterface Interface class of the messages.
/// @tparam TProtOptions Application specific protocol definition options.
template<typename TInterface, typename TProtOptions>
class Ublox7ServerInputMessagesDynMemMsgFactory
{
public:
    /// @brief Type of the common base class of all the messages.
    using Message = TInterface;

    /// @brief Type of the message ID when passed as a parameter.
    using MsgIdParamType = typename Message::MsgIdParamType;

    /// @brief Type of the message ID.
    using MsgIdType = typename Message::MsgIdType;

    /// @brief Smart pointer to @ref Message which holds allocated message object.
    using MsgPtr = std::unique_ptr<Message>;

    /// @brief Reason for message creation failure
    using CreateFailureReason = comms::MsgFactoryCreateFailureReason;

    /// @brief Type of generic message.
    /// @details Not supported
    using GenericMessage = void;

    /// @brief Create message object given the ID of the message.
    /// @param id ID of the message.
    /// @param idx Relative index (or offset) of the message with the same ID.
    /// @param[out] reason Failure reason in case creation has failed.
    MsgPtr createMsg(MsgIdParamType id, unsigned idx = 0U, CreateFailureReason* reason = nullptr) const
    {
        auto updateReasonFunc =
            [reason](CreateFailureReason val)
            {
                if (reason != nullptr) {
                    *reason = val;
                }
            };

        updateReasonFunc(CreateFailureReason::None);
        switch (id) {
            case cc_ublox::MsgId_NavPosecef: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavPosecefPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavPosllh: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavPosllhPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavStatus: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavStatusPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavDop: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavDopPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavSol: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavSolPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavPvt: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavPvtPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavVelecef: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavVelecefPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavVelned: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavVelnedPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavTimegps: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavTimegpsPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavTimeutc: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavTimeutcPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavClock: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavClockPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavSvinfo: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavSvinfoPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavDgps: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavDgpsPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavSbas: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavSbasPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_NavAopstatus: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::NavAopstatusPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_RxmRaw: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::RxmRawPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_RxmSvsi: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::RxmSvsiPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_RxmAlm: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::RxmAlmPollSv<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::RxmAlmPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_RxmEph: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::RxmEphPollSv<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::RxmEphPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_RxmPmreq: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::RxmPmreq<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgPrt: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgPrtDdc<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgPrtUart<TInterface, TProtOptions>);
                }
                if (idx == 2) {
                    return MsgPtr(new cc_ublox::message::CfgPrtUsb<TInterface, TProtOptions>);
                }
                if (idx == 3) {
                    return MsgPtr(new cc_ublox::message::CfgPrtSpi<TInterface, TProtOptions>);
                }
                if (idx == 4) {
                    return MsgPtr(new cc_ublox::message::CfgPrtPortPoll<TInterface, TProtOptions>);
                }
                if (idx == 5) {
                    return MsgPtr(new cc_ublox::message::CfgPrtPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgMsg: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgMsg<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgMsgCurrent<TInterface, TProtOptions>);
                }
                if (idx == 2) {
                    return MsgPtr(new cc_ublox::message::CfgMsgPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgInf: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgInf<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgInfPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgRst: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgRst<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgDat: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgDatUser<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgDatPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgRate: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgRate<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgRatePoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgCfg: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgCfg<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgRxm: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgRxm<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgRxmPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgAnt: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgAnt<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgAntPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgSbas: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgSbas<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgSbasPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgNmea: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgNmeaV0<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgNmea<TInterface, TProtOptions>);
                }
                if (idx == 2) {
                    return MsgPtr(new cc_ublox::message::CfgNmeaPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgUsb: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgUsb<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgUsbPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgNvs: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgNvs<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgNavx5: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgNavx5<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgNavx5Poll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgNav5: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgNav5<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgNav5Poll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgTp5: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgTp5<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgTp5PollSelect<TInterface, TProtOptions>);
                }
                if (idx == 2) {
                    return MsgPtr(new cc_ublox::message::CfgTp5Poll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgRinv: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgRinv<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgRinvPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgItfm: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgItfm<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgItfmPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgPm2: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgPm2<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgPm2Poll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgGnss: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgGnss<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgGnssPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_CfgLogfilter: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::CfgLogfilter<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::CfgLogfilterPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_MonIo: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::MonIoPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_MonVer: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::MonVerPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_MonMsgpp: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::MonMsgppPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_MonRxbuf: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::MonRxbufPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_MonTxbuf: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::MonTxbufPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_MonHw: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::MonHwPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_MonHw2: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::MonHw2Poll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidReq: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidReq<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidIni: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidIni<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::AidIniPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidHui: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidHui<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::AidHuiPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidData: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidData<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidAlm: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidAlmPollSv<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::AidAlmPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidEph: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidEphPollSv<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::AidEphPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidAlpsrv: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidAlpsrv<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidAop: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidAop<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::AidAopPollSv<TInterface, TProtOptions>);
                }
                if (idx == 2) {
                    return MsgPtr(new cc_ublox::message::AidAopPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_AidAlp: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::AidAlp<TInterface, TProtOptions>);
                }
                if (idx == 1) {
                    return MsgPtr(new cc_ublox::message::AidAlpStatus<TInterface, TProtOptions>);
                }
                if (idx == 2) {
                    return MsgPtr(new cc_ublox::message::AidAlpData<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_TimTp: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::TimTpPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_TimTm2: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::TimTm2Poll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_TimVrfy: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::TimVrfyPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_LogErase: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::LogErase<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_LogString: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::LogString<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_LogCreate: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::LogCreate<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_LogInfo: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::LogInfoPoll<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_LogRetrieve: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::LogRetrieve<TInterface, TProtOptions>);
                }
                break;

            case cc_ublox::MsgId_LogFindtime: 
                if (idx == 0) {
                    return MsgPtr(new cc_ublox::message::LogFindtime<TInterface, TProtOptions>);
                }
                break;

            default: break;
        }

        updateReasonFunc(CreateFailureReason::InvalidId);
        return MsgPtr();
    }

    /// @brief Allocate and initialise @b comms::GenericMessage object.
    MsgPtr createGenericMsg(MsgIdParamType id, unsigned idx = 0U) const
    {
        static_cast<void>(id);
        static_cast<void>(idx);
        return MsgPtr();
    }

    /// @brief Inquiry whether allocation is possible
    bool canAllocate() const
    {
        return true;
    }

    /// @brief Get number of message types that have the specified ID.
    /// @param id ID of the message.
    /// @return Number of message classes that report same ID.
    std::size_t msgCount(MsgIdParamType id) const
    {
        switch (id)
        {
            case cc_ublox::MsgId_NavPosecef: return 1U;
            case cc_ublox::MsgId_NavPosllh: return 1U;
            case cc_ublox::MsgId_NavStatus: return 1U;
            case cc_ublox::MsgId_NavDop: return 1U;
            case cc_ublox::MsgId_NavSol: return 1U;
            case cc_ublox::MsgId_NavPvt: return 1U;
            case cc_ublox::MsgId_NavVelecef: return 1U;
            case cc_ublox::MsgId_NavVelned: return 1U;
            case cc_ublox::MsgId_NavTimegps: return 1U;
            case cc_ublox::MsgId_NavTimeutc: return 1U;
            case cc_ublox::MsgId_NavClock: return 1U;
            case cc_ublox::MsgId_NavSvinfo: return 1U;
            case cc_ublox::MsgId_NavDgps: return 1U;
            case cc_ublox::MsgId_NavSbas: return 1U;
            case cc_ublox::MsgId_NavAopstatus: return 1U;
            case cc_ublox::MsgId_RxmRaw: return 1U;
            case cc_ublox::MsgId_RxmSvsi: return 1U;
            case cc_ublox::MsgId_RxmAlm: return 2U;
            case cc_ublox::MsgId_RxmEph: return 2U;
            case cc_ublox::MsgId_RxmPmreq: return 1U;
            case cc_ublox::MsgId_CfgPrt: return 6U;
            case cc_ublox::MsgId_CfgMsg: return 3U;
            case cc_ublox::MsgId_CfgInf: return 2U;
            case cc_ublox::MsgId_CfgRst: return 1U;
            case cc_ublox::MsgId_CfgDat: return 2U;
            case cc_ublox::MsgId_CfgRate: return 2U;
            case cc_ublox::MsgId_CfgCfg: return 1U;
            case cc_ublox::MsgId_CfgRxm: return 2U;
            case cc_ublox::MsgId_CfgAnt: return 2U;
            case cc_ublox::MsgId_CfgSbas: return 2U;
            case cc_ublox::MsgId_CfgNmea: return 3U;
            case cc_ublox::MsgId_CfgUsb: return 2U;
            case cc_ublox::MsgId_CfgNvs: return 1U;
            case cc_ublox::MsgId_CfgNavx5: return 2U;
            case cc_ublox::MsgId_CfgNav5: return 2U;
            case cc_ublox::MsgId_CfgTp5: return 3U;
            case cc_ublox::MsgId_CfgRinv: return 2U;
            case cc_ublox::MsgId_CfgItfm: return 2U;
            case cc_ublox::MsgId_CfgPm2: return 2U;
            case cc_ublox::MsgId_CfgGnss: return 2U;
            case cc_ublox::MsgId_CfgLogfilter: return 2U;
            case cc_ublox::MsgId_MonIo: return 1U;
            case cc_ublox::MsgId_MonVer: return 1U;
            case cc_ublox::MsgId_MonMsgpp: return 1U;
            case cc_ublox::MsgId_MonRxbuf: return 1U;
            case cc_ublox::MsgId_MonTxbuf: return 1U;
            case cc_ublox::MsgId_MonHw: return 1U;
            case cc_ublox::MsgId_MonHw2: return 1U;
            case cc_ublox::MsgId_AidReq: return 1U;
            case cc_ublox::MsgId_AidIni: return 2U;
            case cc_ublox::MsgId_AidHui: return 2U;
            case cc_ublox::MsgId_AidData: return 1U;
            case cc_ublox::MsgId_AidAlm: return 2U;
            case cc_ublox::MsgId_AidEph: return 2U;
            case cc_ublox::MsgId_AidAlpsrv: return 1U;
            case cc_ublox::MsgId_AidAop: return 3U;
            case cc_ublox::MsgId_AidAlp: return 3U;
            case cc_ublox::MsgId_TimTp: return 1U;
            case cc_ublox::MsgId_TimTm2: return 1U;
            case cc_ublox::MsgId_TimVrfy: return 1U;
            case cc_ublox::MsgId_LogErase: return 1U;
            case cc_ublox::MsgId_LogString: return 1U;
            case cc_ublox::MsgId_LogCreate: return 1U;
            case cc_ublox::MsgId_LogInfo: return 1U;
            case cc_ublox::MsgId_LogRetrieve: return 1U;
            case cc_ublox::MsgId_LogFindtime: return 1U;
            default: break;
        }

        return 0U;
    }

    /// @brief Compile time inquiry whether all the message classes have unique IDs.
    static constexpr bool hasUniqueIds()
    {
        return false;
    }

    /// @brief Compile time inquiry whether polymorphic dispatch tables are
    ///     generated internally to map message ID to actual type.
    static constexpr bool isDispatchPolymorphic()
    {
        return false;
    }

    /// @brief Compile time inquiry whether static binary search dispatch is
    ///     generated internally to map message ID to actual type.
    static constexpr bool isDispatchStaticBinSearch()
    {
        return false;
    }

    /// @brief Compile time inquiry whether linear switch dispatch is
    ///     generated internally to map message ID to actual type.
    static constexpr bool isDispatchLinearSwitch()
    {
        return false;
    }

    /// @brief Compile time inquiry whether factory supports in-place allocation
    static constexpr bool hasInPlaceAllocation()
    {
        return false;
    }

    /// @brief Compile time inquiry whether factory supports @b comms::GenericMessage allocation.
    static constexpr bool hasGenericMessageSupport()
    {
        return false;
    }

    /// @brief Compile time inquiry whether factory has forced dispatch method
    static constexpr bool hasForcedDispatch()
    {
        return true;
    }
};

} // namespace factory

} // namespace cc_ublox
