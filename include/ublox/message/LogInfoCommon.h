// Generated by commsdsl2comms v3.6.4

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref ublox::message::LogInfo message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>
#include "ublox/field/DayCommon.h"
#include "ublox/field/HourCommon.h"
#include "ublox/field/MinCommon.h"
#include "ublox/field/MonthCommon.h"
#include "ublox/field/Res1Common.h"
#include "ublox/field/Res3Common.h"
#include "ublox/field/Res8Common.h"
#include "ublox/field/SecCommon.h"
#include "ublox/field/YearCommon.h"

namespace ublox
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref ublox::message::LogInfo message.
/// @see ublox::message::LogInfoFields
struct LogInfoFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::Version field.
    struct VersionCommon
    {
        /// @brief Re-definition of the value type used by
        ///     ublox::message::LogInfoFields::Version field.
        using ValueType = std::uint8_t;
    
        /// @brief Name of the @ref ublox::message::LogInfoFields::Version field.
        static const char* name()
        {
            return "version";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::Reserved1 field.
    struct Reserved1Common : public ublox::field::Res3Common
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::Reserved1 field.
        static const char* name()
        {
            return "reserved1";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::FilestoreCapacity field.
    struct FilestoreCapacityCommon
    {
        /// @brief Re-definition of the value type used by
        ///     ublox::message::LogInfoFields::FilestoreCapacity field.
        using ValueType = std::uint32_t;
    
        /// @brief Name of the @ref ublox::message::LogInfoFields::FilestoreCapacity field.
        static const char* name()
        {
            return "filestoreCapacity";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::Reserved2 field.
    struct Reserved2Common : public ublox::field::Res8Common
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::Reserved2 field.
        static const char* name()
        {
            return "reserved2";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::CurrentMaxLogSize field.
    struct CurrentMaxLogSizeCommon
    {
        /// @brief Re-definition of the value type used by
        ///     ublox::message::LogInfoFields::CurrentMaxLogSize field.
        using ValueType = std::uint32_t;
    
        /// @brief Name of the @ref ublox::message::LogInfoFields::CurrentMaxLogSize field.
        static const char* name()
        {
            return "currentMaxLogSize";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::CurrentLogSize field.
    struct CurrentLogSizeCommon
    {
        /// @brief Re-definition of the value type used by
        ///     ublox::message::LogInfoFields::CurrentLogSize field.
        using ValueType = std::uint32_t;
    
        /// @brief Name of the @ref ublox::message::LogInfoFields::CurrentLogSize field.
        static const char* name()
        {
            return "currentLogSize";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::EntryCount field.
    struct EntryCountCommon
    {
        /// @brief Re-definition of the value type used by
        ///     ublox::message::LogInfoFields::EntryCount field.
        using ValueType = std::uint32_t;
    
        /// @brief Name of the @ref ublox::message::LogInfoFields::EntryCount field.
        static const char* name()
        {
            return "entryCount";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::OldestYear field.
    struct OldestYearCommon : public ublox::field::YearCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::OldestYear field.
        static const char* name()
        {
            return "oldestYear";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::OldestMonth field.
    struct OldestMonthCommon : public ublox::field::MonthCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::OldestMonth field.
        static const char* name()
        {
            return "oldestMonth";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::OldestDay field.
    struct OldestDayCommon : public ublox::field::DayCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::OldestDay field.
        static const char* name()
        {
            return "oldestDay";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::OldestHour field.
    struct OldestHourCommon : public ublox::field::HourCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::OldestHour field.
        static const char* name()
        {
            return "oldestHour";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::OldestMinute field.
    struct OldestMinuteCommon : public ublox::field::MinCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::OldestMinute field.
        static const char* name()
        {
            return "oldestMinute";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::OldestSecond field.
    struct OldestSecondCommon : public ublox::field::SecCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::OldestSecond field.
        static const char* name()
        {
            return "oldestSecond";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::Reserved3 field.
    struct Reserved3Common : public ublox::field::Res1Common
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::Reserved3 field.
        static const char* name()
        {
            return "reserved3";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::NewestYear field.
    struct NewestYearCommon : public ublox::field::YearCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::NewestYear field.
        static const char* name()
        {
            return "newestYear";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::NewestMonth field.
    struct NewestMonthCommon : public ublox::field::MonthCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::NewestMonth field.
        static const char* name()
        {
            return "newestMonth";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::NewestDay field.
    struct NewestDayCommon : public ublox::field::DayCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::NewestDay field.
        static const char* name()
        {
            return "newestDay";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::NewestHour field.
    struct NewestHourCommon : public ublox::field::HourCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::NewestHour field.
        static const char* name()
        {
            return "newestHour";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::NewestMinute field.
    struct NewestMinuteCommon : public ublox::field::MinCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::NewestMinute field.
        static const char* name()
        {
            return "newestMinute";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::NewestSecond field.
    struct NewestSecondCommon : public ublox::field::SecCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::NewestSecond field.
        static const char* name()
        {
            return "newestSecond";
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::Reserved4 field.
    struct Reserved4Common : public ublox::field::Res1Common
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::Reserved4 field.
        static const char* name()
        {
            return "reserved4";
        }
        
    };
    
    /// @brief Common functions for
    ///     @ref ublox::message::LogInfoFields::Status field.
    struct StatusCommon
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::Status field.
        static const char* name()
        {
            return "status";
        }
        
        /// @brief Retrieve name of the bit of
        ///     @ref ublox::message::LogInfoFields::Status field.
        static const char* bitName(std::size_t idx)
        {
            static const char* Map[] = {
                nullptr,
                nullptr,
                nullptr,
                "recording",
                "inactive",
                "circular"
            };
        
            static const std::size_t MapSize = std::extent<decltype(Map)>::value;
            if (MapSize <= idx) {
                return nullptr;
            }
        
            return Map[idx];
        }
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::LogInfoFields::Reserved5 field.
    struct Reserved5Common : public ublox::field::Res3Common
    {
        /// @brief Name of the @ref ublox::message::LogInfoFields::Reserved5 field.
        static const char* name()
        {
            return "reserved5";
        }
        
    };
    
};

/// @brief Common types and functions of 
///     @ref ublox::message::LogInfo message.
/// @see ublox::message::LogInfo
struct LogInfoCommon
{
    /// @brief Name of the @ref ublox::message::LogInfo message.
    static const char* name()
    {
        return "LOG-INFO";
    }
    
};

} // namespace message

} // namespace ublox


