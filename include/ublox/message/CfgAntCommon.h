// Generated by commsdsl2comms v4.0.0

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref ublox::message::CfgAnt message and its fields.

#pragma once

#include <cstdint>
#include <type_traits>

namespace ublox
{

namespace message
{


/// @brief Common types and functions for fields of 
///     @ref ublox::message::CfgAnt message.
/// @see ublox::message::CfgAntFields
struct CfgAntFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref ublox::message::CfgAntFields::Flags field.
    struct FlagsCommon
    {
        /// @brief Name of the @ref ublox::message::CfgAntFields::Flags field.
        static const char* name()
        {
            return "flags";
        }
        
        /// @brief Retrieve name of the bit of
        ///     @ref ublox::message::CfgAntFields::Flags field.
        static const char* bitName(std::size_t idx)
        {
            static const char* Map[] = {
                "svcs",
                "scd",
                "ocd",
                "pdwnOnSCD",
                "recovery"
            };
        
            static const std::size_t MapSize = std::extent<decltype(Map)>::value;
            if (MapSize <= idx) {
                return nullptr;
            }
        
            return Map[idx];
        }
        
        
    };
    
    /// @brief Scope for all the common definitions of the member fields of
    ///     @ref ublox::message::CfgAntFields::Pins field.
    struct PinsMembersCommon
    {
        /// @brief Common types and functions for
        ///     @ref ublox::message::CfgAntFields::PinsMembers::PinSwitch field.
        struct PinSwitchCommon
        {
            /// @brief Re-definition of the value type used by
            ///     ublox::message::CfgAntFields::PinsMembers::PinSwitch field.
            using ValueType = std::uint8_t;
            
            /// @brief Name of the @ref ublox::message::CfgAntFields::PinsMembers::PinSwitch field.
            static const char* name()
            {
                return "pinSwitch";
            }
            
            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
            
            
        };
        
        /// @brief Common types and functions for
        ///     @ref ublox::message::CfgAntFields::PinsMembers::PinSCD field.
        struct PinSCDCommon
        {
            /// @brief Re-definition of the value type used by
            ///     ublox::message::CfgAntFields::PinsMembers::PinSCD field.
            using ValueType = std::uint8_t;
            
            /// @brief Name of the @ref ublox::message::CfgAntFields::PinsMembers::PinSCD field.
            static const char* name()
            {
                return "pinSCD";
            }
            
            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
            
            
        };
        
        /// @brief Common types and functions for
        ///     @ref ublox::message::CfgAntFields::PinsMembers::PinOCD field.
        struct PinOCDCommon
        {
            /// @brief Re-definition of the value type used by
            ///     ublox::message::CfgAntFields::PinsMembers::PinOCD field.
            using ValueType = std::uint8_t;
            
            /// @brief Name of the @ref ublox::message::CfgAntFields::PinsMembers::PinOCD field.
            static const char* name()
            {
                return "pinOCD";
            }
            
            /// @brief Compile time detection of special values presence.
            static constexpr bool hasSpecials()
            {
                return false;
            }
            
            
        };
        
        /// @brief Common types and functions for
        ///     @ref ublox::message::CfgAntFields::PinsMembers::Bits field.
        struct BitsCommon
        {
            /// @brief Name of the @ref ublox::message::CfgAntFields::PinsMembers::Bits field.
            static const char* name()
            {
                return "";
            }
            
            /// @brief Retrieve name of the bit of
            ///     @ref ublox::message::CfgAntFields::PinsMembers::Bits field.
            static const char* bitName(std::size_t idx)
            {
                static const char* Map[] = {
                    "reconfig"
                };
            
                static const std::size_t MapSize = std::extent<decltype(Map)>::value;
                if (MapSize <= idx) {
                    return nullptr;
                }
            
                return Map[idx];
            }
            
            
        };
        
    };
    
    /// @brief Common types and functions for
    ///     @ref ublox::message::CfgAntFields::Pins field.
    struct PinsCommon
    {
        /// @brief Name of the @ref ublox::message::CfgAntFields::Pins field.
        static const char* name()
        {
            return "pins";
        }
        
    };
    
};

/// @brief Common types and functions of 
///     @ref ublox::message::CfgAnt message.
struct CfgAntCommon
{
    /// @brief Name of the @ref ublox::message::CfgAnt message.
    static const char* name()
    {
        return "CFG-ANT";
    }
    
};

} // namespace message

} // namespace ublox



